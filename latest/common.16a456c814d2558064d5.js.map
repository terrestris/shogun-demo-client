{"version":3,"file":"common.16a456c814d2558064d5.js","mappings":"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","sources":["webpack://shogun-demo-client/./src/hooks/useAppDispatch.ts","webpack://shogun-demo-client/./src/hooks/useAppSelector.ts","webpack://shogun-demo-client/./src/components/AddLayerModal/AddLayerModal.less?a132","webpack://shogun-demo-client/./src/components/AddLayerModal/AddLayerModal.tsx","webpack://shogun-demo-client/./src/components/BasicMapComponent/index.tsx","webpack://shogun-demo-client/./src/components/Footer/index.less?bf45","webpack://shogun-demo-client/./src/components/Footer/index.tsx","webpack://shogun-demo-client/./src/components/BasicNominatimSearch/index.tsx","webpack://shogun-demo-client/./src/hooks/useSHOGunAPIClient.ts","webpack://shogun-demo-client/./src/utils/getGravatarUrl.ts","webpack://shogun-demo-client/./src/components/ApplicationInfo/index.less?5255","webpack://shogun-demo-client/./src/components/ApplicationInfo/index.tsx","webpack://shogun-demo-client/./src/hooks/useVersion.ts","webpack://shogun-demo-client/./src/components/UserMenu/index.less?f429","webpack://shogun-demo-client/./src/components/UserMenu/index.tsx","webpack://shogun-demo-client/./src/components/Header/index.less?b06e","webpack://shogun-demo-client/./src/components/Header/index.tsx","webpack://shogun-demo-client/./src/components/PrintForm/CustomFieldInput/index.tsx","webpack://shogun-demo-client/./src/components/PrintForm/LayoutSelect/index.tsx","webpack://shogun-demo-client/./src/components/PrintForm/OutputFormatSelect/index.tsx","webpack://shogun-demo-client/./src/components/PrintForm/ResolutionSelect/index.tsx","webpack://shogun-demo-client/./src/components/PrintForm/index.less?f789","webpack://shogun-demo-client/./src/components/PrintForm/index.tsx","webpack://shogun-demo-client/./src/components/PrintForm/Serializer/SHOGunMapFishPrintV3WMSSerializer.ts","webpack://shogun-demo-client/./src/components/PrintForm/Serializer/SHOGunMapFishPrintV3TiledWMSSerializer.ts","webpack://shogun-demo-client/./src/components/ToolMenu/Draw/index.less?6377","webpack://shogun-demo-client/./src/components/ToolMenu/Draw/index.tsx","webpack://shogun-demo-client/./src/components/ToolMenu/FeatureInfo/FeaturePropertyGrid/index.less?a4df","webpack://shogun-demo-client/./src/components/ToolMenu/FeatureInfo/FeaturePropertyGrid/index.tsx","webpack://shogun-demo-client/./src/components/ToolMenu/FeatureInfo/index.less?7905","webpack://shogun-demo-client/./src/components/ToolMenu/FeatureInfo/index.tsx","webpack://shogun-demo-client/./src/components/ToolMenu/LayerTree/LayerTreeContextMenu/index.tsx","webpack://shogun-demo-client/./src/components/ToolMenu/LayerTree/index.less?c926","webpack://shogun-demo-client/./src/components/ToolMenu/LayerTree/index.tsx","webpack://shogun-demo-client/./src/components/ToolMenu/Measure/index.less?beca","webpack://shogun-demo-client/./src/components/ToolMenu/Measure/index.tsx","webpack://shogun-demo-client/./src/components/ToolMenu/index.less?b016","webpack://shogun-demo-client/./src/components/PrintForm/Shared/Shared.ts","webpack://shogun-demo-client/./src/components/ToolMenu/index.tsx","webpack://shogun-demo-client/./src/App.less?984e","webpack://shogun-demo-client/./src/App.tsx","webpack://shogun-demo-client/./src/context/SHOGunAPIClientContext.tsx","webpack://shogun-demo-client/./src/i18n/index.ts","webpack://shogun-demo-client/./src/i18n/translations.ts","webpack://shogun-demo-client/./src/store/appInfo/index.ts","webpack://shogun-demo-client/./src/store/logoPath/index.ts","webpack://shogun-demo-client/./src/store/title/index.ts","webpack://shogun-demo-client/./src/store/user/index.ts","webpack://shogun-demo-client/./src/store/store.ts","webpack://shogun-demo-client/./src/index.less?df1e","webpack://shogun-demo-client/./src/index.tsx","webpack://shogun-demo-client/./src/store/addLayerModal/index.ts","webpack://shogun-demo-client/./src/store/toolMenu/index.ts","webpack://shogun-demo-client/./src/App.less?ee38","webpack://shogun-demo-client/./src/components/AddLayerModal/AddLayerModal.less?eef9","webpack://shogun-demo-client/./src/components/ApplicationInfo/index.less?f940","webpack://shogun-demo-client/./src/components/Footer/index.less?a2b7","webpack://shogun-demo-client/./src/components/Header/index.less?b02d","webpack://shogun-demo-client/./src/components/PrintForm/index.less?6410","webpack://shogun-demo-client/./src/components/ToolMenu/Draw/index.less?6534","webpack://shogun-demo-client/./src/components/ToolMenu/FeatureInfo/FeaturePropertyGrid/index.less?27cc","webpack://shogun-demo-client/./src/components/ToolMenu/FeatureInfo/index.less?f3c5","webpack://shogun-demo-client/./src/components/ToolMenu/LayerTree/index.less?d8e5","webpack://shogun-demo-client/./src/components/ToolMenu/Measure/index.less?b29b","webpack://shogun-demo-client/./src/components/ToolMenu/index.less?949c","webpack://shogun-demo-client/./src/components/UserMenu/index.less?a168","webpack://shogun-demo-client/./src/index.less?2fc8"],"sourcesContent":["import {\n  useDispatch\n} from 'react-redux';\n\nimport type {\n  AppDispatch\n} from '../store/store';\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\n\nexport default useAppDispatch;\n","import {\n  TypedUseSelectorHook,\n  useSelector\n} from 'react-redux';\n\nimport type {\n  RootState\n} from '../store/store';\n\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n\nexport default useAppSelector;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./AddLayerModal.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./AddLayerModal.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useState\n} from 'react';\n\nimport {\n  Button,\n  Input,\n  Modal,\n  ModalProps,\n  notification,\n  Table\n} from 'antd';\n\nimport {\n  getUid\n} from 'ol';\nimport OlLayerGroup from 'ol/layer/Group';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport {\n  CapabilitiesUtil,\n  MapUtil\n} from '@terrestris/ol-util';\nimport {\n  WMSLayer\n} from '@terrestris/ol-util/dist/types';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport useAppDispatch from '../../hooks/useAppDispatch';\nimport useAppSelector from '../../hooks/useAppSelector';\nimport {\n  hide\n} from '../../store/addLayerModal';\nimport {\n  unsetSelectedKey\n} from '../../store/toolMenu';\n\nimport './AddLayerModal.less';\n\nexport type AddLayerModalProps = {} & Partial<ModalProps>;\n\nexport const AddLayerModal: React.FC<AddLayerModalProps> = ({\n  ...restProps\n}): JSX.Element => {\n  const [loading, setLoading] = useState(false);\n  const [layers, setLayers] = useState<WMSLayer[]>([]);\n  const [selectedRowKeys, setSelectedRowKeys] = useState<React.Key[]>([]);\n  const [url, setUrl] = useState(\n    'https://sgx.geodatenzentrum.de/wms_topplus_open?request=GetCapabilities&service=wms'\n  );\n\n  const isModalVisible = useAppSelector(state => state.addLayerModal.visible);\n\n  const dispatch = useAppDispatch();\n\n  const map = useMap();\n\n  const {\n    t\n  } = useTranslation();\n\n  const getCapabilities = async (capabilitiesUrl: string) => {\n    try {\n      setLoading(true);\n\n      const capabilities = await CapabilitiesUtil.getWmsCapabilities(capabilitiesUrl);\n      const externalLayers = CapabilitiesUtil.getLayersFromWmsCapabilities(capabilities, 'Title');\n\n      setLayers(externalLayers);\n    } catch (error) {\n      notification.error({\n        message: t('AddLayerModal.errorMessage'),\n        description: t('AddLayerModal.errorDescription')\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const closeModal = () => {\n    setSelectedRowKeys([]);\n    setLayers([]);\n    dispatch(hide());\n    dispatch(unsetSelectedKey('addLayer'));\n  };\n\n  const onAddSelected = () => {\n    const layersToAdd = layers.filter(layer => selectedRowKeys.includes(getUid(layer)));\n    addLayers(layersToAdd);\n  };\n\n  const onAddAll = () => {\n    addLayers(layers);\n  };\n\n  const addLayers = (layersToAdd: WMSLayer[]) => {\n    if (!map) {\n      return;\n    }\n\n    const targetFolderName = t('AddLayerModal.externalWmsFolder');\n    let targetGroup = MapUtil.getLayerByName(map, targetFolderName) as OlLayerGroup;\n    if (!targetGroup) {\n      targetGroup = new OlLayerGroup();\n      targetGroup.set('name', targetFolderName);\n      const existingGroups = map.getLayerGroup().getLayers();\n      existingGroups.insertAt(existingGroups?.getLength() || 0, targetGroup);\n    }\n\n    layersToAdd.forEach(layerToAdd => {\n      if (!targetGroup.getLayers().getArray().includes(layerToAdd)) {\n        layerToAdd.set('isExternalLayer', true);\n        targetGroup.getLayers().push(layerToAdd);\n      }\n    });\n\n    targetGroup.set('hideInLayerTree', targetGroup.getLayers().getLength() < 1);\n\n    closeModal();\n  };\n\n  return (\n    <Modal\n      className=\"add-layer-modal\"\n      title={t('AddLayerModal.title')}\n      visible={isModalVisible}\n      onCancel={closeModal}\n      footer={[\n        <Button\n          key=\"add-selected\"\n          disabled={selectedRowKeys?.length < 1}\n          onClick={onAddSelected}\n        >\n          {t('AddLayerModal.addSelectedLayers')}\n        </Button>,\n        <Button\n          key=\"add-all\"\n          disabled={layers?.length < 1}\n          onClick={onAddAll}\n        >\n          {t('AddLayerModal.addAllLayers')}\n        </Button>\n      ]}\n      {...restProps}\n    >\n      <Input.Search\n        placeholder={t('AddLayerModal.inputPlaceholder')}\n        value={url}\n        onChange={(event) => {\n          setUrl(event.target.value);\n        }}\n        onSearch={getCapabilities}\n        enterButton={true}\n      />\n      <Table\n        loading={loading}\n        columns={[\n          {\n            title: t('AddLayerModal.columnTitle'),\n            render: (text: any, record: any) => {\n              return record.get('title');\n            }\n          }\n        ]}\n        rowKey={(record: any) => getUid(record)}\n        rowSelection={{\n          selectedRowKeys,\n          onChange: setSelectedRowKeys\n        }}\n        pagination={false}\n        dataSource={layers}\n      />\n    </Modal>\n  );\n};\n\nexport default AddLayerModal;\n","import React from 'react';\n\nimport useMap from '@terrestris/react-geo/dist/Hook/useMap';\nimport MapComponent, {\n  MapComponentProps\n} from '@terrestris/react-geo/dist/Map/MapComponent/MapComponent';\n\nexport const BasicMapComponent: React.FC<Partial<MapComponentProps>> = ({\n  ...restProps\n}): JSX.Element => {\n  const map = useMap();\n\n  if (!map) {\n    return <></>;\n  }\n\n  return (\n    <MapComponent\n      map={map}\n      {...restProps}\n    />\n  );\n};\n\nexport default BasicMapComponent;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useEffect\n} from 'react';\n\nimport {\n  Button,\n  Divider\n} from 'antd';\n\nimport OlControlMousePosition from 'ol/control/MousePosition';\nimport OlControlScaleLine from 'ol/control/ScaleLine';\nimport {\n  createStringXY\n} from 'ol/coordinate';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport ScaleCombo from '@terrestris/react-geo/dist/Field/ScaleCombo/ScaleCombo';\nimport useMap from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport './index.less';\n\nexport interface FooterProps extends React.ComponentProps<'div'> { }\n\nexport const Footer: React.FC<FooterProps> = ({\n  ...restProps\n}): JSX.Element => {\n  const {\n    t\n  } = useTranslation();\n\n  const map = useMap();\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    const existingControl = map.getControls().getArray()\n      .find(control => control instanceof OlControlScaleLine);\n\n    if (existingControl) {\n      return;\n    }\n\n    map.addControl(\n      new OlControlScaleLine({\n        target: 'scale-line-container'\n      })\n    );\n  }, [map]);\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    const existingControl = map.getControls().getArray()\n      .find(control => control instanceof OlControlMousePosition);\n\n    if (existingControl) {\n      return;\n    }\n\n    map.addControl(\n      new OlControlMousePosition({\n        coordinateFormat: createStringXY(2),\n        projection: 'EPSG:25832',\n        undefinedHTML: '&nbsp;',\n        target: 'mouse-position'\n      })\n    );\n  }, [map]);\n\n  const openContactModal = (): void => {\n    window.open('https://www.terrestris.de/de/kontakt/', '_blank');\n  };\n\n  const openImprintModal = (): void => {\n    window.open('https://www.terrestris.de/de/impressum/', '_blank');\n  };\n\n  const openPrivacyModal = (): void => {\n    window.open('https://www.terrestris.de/de/datenschutzerklaerung/', '_blank');\n  };\n\n  if (!map) {\n    return <></>;\n  }\n\n  return (\n    <div\n      className=\"footer\"\n      {...restProps}\n    >\n      <div\n        className=\"item-container left-items\"\n      >\n        <div\n          id=\"scale-line-container\"\n        />\n        <Divider\n          type=\"vertical\"\n        />\n        <div\n          className=\"scale-combo\"\n        >\n          {t('Footer.scale')}:&nbsp;\n          <ScaleCombo\n            map={map}\n          />\n          <Divider\n            type=\"vertical\"\n          />\n        </div>\n        <div\n          className=\"reference-system\"\n        >\n          {t('Footer.refSystem')}: {map.getView().getProjection().getCode()}\n          <Divider\n            type=\"vertical\"\n          />\n        </div>\n        <div\n          className=\"mouse-position-wrapper\"\n        >\n          {t('Footer.mousePosition')}:&nbsp;\n          <div\n            id=\"mouse-position\"\n            className=\"mouse-position\"\n          />\n        </div>\n      </div>\n      <div className=\"item-container right-items\">\n        <Button\n          onClick={openContactModal}\n          type=\"link\"\n        >\n          {t('Footer.contact')}\n        </Button>\n        <Button\n          onClick={openImprintModal}\n          type=\"link\"\n        >\n          {t('Footer.imprint')}\n        </Button>\n        <Button\n          onClick={openPrivacyModal}\n          type=\"link\"\n        >\n          {t('Footer.privacypolicy')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport NominatimSearch, {\n  NominatimSearchProps\n} from '@terrestris/react-geo/dist/Field/NominatimSearch/NominatimSearch';\nimport useMap from '@terrestris/react-geo/dist/Hook/useMap';\n\nexport const BasicNominatimSearch: React.FC<Partial<NominatimSearchProps>> = ({\n  ...restProps\n}): JSX.Element => {\n  const map = useMap();\n  const {\n    t\n  } = useTranslation();\n\n  if (!map) {\n    return <></>;\n  }\n\n  return (\n    <NominatimSearch\n      map={map}\n      countryCodes={''}\n      allowClear={true}\n      nominatimBaseUrl={'https://nominatim.terrestris.de/search.php?'}\n      placeholder={t('Nominatim.placeholder')}\n      {...restProps}\n    />\n  );\n};\n\nexport default BasicNominatimSearch;\n","import {\n  useContext\n} from 'react';\n\nimport SHOGunAPIClient from '@terrestris/shogun-util/dist/service/SHOGunAPIClient';\n\nimport SHOGunAPIClientContext from '../context/SHOGunAPIClientContext';\n\nexport const useSHOGunAPIClient = (): SHOGunAPIClient | null => {\n  const context = useContext(SHOGunAPIClientContext);\n\n  return context;\n};\n\nexport default useSHOGunAPIClient;\n","import md5 from 'js-md5';\n\nexport interface GravatarProps {\n  email: string;\n  size?: number;\n  rating?: 'g' | 'pg' | 'r' | 'x';\n  defaultImage?: '404' | 'mp' | 'identicon' | 'monsterid' | 'wavatar' | 'retro' | 'robohash' | 'blank';\n  force?: boolean;\n}\n\nconst GRAVATAR_BASE_URL = 'https://www.gravatar.com/avatar/';\n\n/**\n * https://de.gravatar.com/site/implement/images/\n */\nexport const getGravatarUrl = ({\n  email = '',\n  size = 80,\n  rating = 'g',\n  defaultImage = 'identicon',\n  force = false\n}: GravatarProps): string => {\n  const lowerCaseEmail = email.toLowerCase();\n  const hash = md5(lowerCaseEmail);\n\n  let url = `${GRAVATAR_BASE_URL}${hash}?s=${size}&r=${rating}&d=${defaultImage}`;\n\n  if (force) {\n    url = `${url}&f=y`;\n  }\n\n  return url;\n};\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useState\n} from 'react';\n\nimport {\n  Modal,\n  Statistic\n} from 'antd';\n\nimport {\n  ModalProps\n} from 'antd/lib/modal';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport useAppSelector from '../../hooks/useAppSelector';\n\nimport {\n  useClientVersion\n} from '../../hooks/useVersion';\n\nimport './index.less';\n\ninterface ApplicationInfoProps extends ModalProps {\n  opener?: JSX.Element;\n}\n\nexport const ApplicationInfo: React.FC<ApplicationInfoProps> = ({\n  opener,\n  ...restProps\n}) => {\n  const {\n    t\n  } = useTranslation();\n\n  const appInfo = useAppSelector((state) => state.appInfo);\n  const logoPath = useAppSelector((state) => state.logoPath);\n\n  const [isVisible, setVisible] = useState<boolean>(false);\n\n  const toggleVisibility = () => {\n    setVisible(!isVisible);\n  };\n\n  let Opener;\n  if (opener) {\n    Opener = React.cloneElement(\n      opener,\n      {\n        onClick: toggleVisibility\n      }\n    );\n  } else {\n    Opener = <button onClick={toggleVisibility}>Open</button>;\n  }\n\n  return (\n    <>\n      {\n        Opener\n      }\n      <Modal\n        className='application-info'\n        title={t('ApplicationInfo.title')}\n        centered={true}\n        visible={isVisible}\n        onOk={toggleVisibility}\n        onCancel={toggleVisibility}\n        footer={null}\n        {...restProps}\n      >\n        <img\n          className=\"logo\"\n          src={logoPath}\n        />\n        <Statistic\n          title={t('ApplicationInfo.clientVersionTitle')}\n          value={useClientVersion()}\n        />\n        <Statistic\n          title={t('ApplicationInfo.backendVersionTitle')}\n          value={`${appInfo.version} (${appInfo.buildTime})`}\n        />\n      </Modal>\n    </>\n  );\n};\n\nexport default ApplicationInfo;\n","import * as packageInfoClient from '../../package.json';\n\nexport const useClientVersion = () => {\n  // @ts-ignore\n  return packageInfoClient.default.version;\n};\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\n\nimport {\n  faInfo,\n  faUserCog,\n  faSignOut,\n  faSignIn,\n  faAngleDown\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  Menu\n} from 'antd';\n\nimport {\n  ItemType\n} from 'antd/lib/menu/hooks/useItems';\n\nimport _isEmpty from 'lodash/isEmpty';\n\nimport {\n  MenuInfo\n} from 'rc-menu/lib/interface';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport UserChip from '@terrestris/react-geo/dist/UserChip/UserChip';\n\nimport useAppSelector from '../../hooks/useAppSelector';\nimport useSHOGunAPIClient from '../../hooks/useSHOGunAPIClient';\nimport {\n  getGravatarUrl\n} from '../../utils/getGravatarUrl';\n\nimport ApplicationInfo from '../ApplicationInfo';\n\nimport './index.less';\n\ninterface OwnProps { }\n\ntype UserProps = OwnProps;\n\nexport const UserMenu: React.FC<UserProps> = (): JSX.Element => {\n  const {\n    t\n  } = useTranslation();\n\n  const client = useSHOGunAPIClient();\n  const keycloak = client?.getKeycloak();\n\n  const user = useAppSelector((state) => state.user);\n\n  const onMenuClick = (evt: MenuInfo) => {\n    switch (evt.key) {\n      case 'settings':\n        if (keycloak) {\n          keycloak.accountManagement();\n        }\n        break;\n      case 'info':\n        // Don't do anything, visible state will be handled by the menu itself.\n        break;\n      case 'login':\n        if (keycloak) {\n          keycloak.login();\n        }\n        break;\n      case 'logout':\n        if (keycloak) {\n          keycloak.logout();\n        }\n        break;\n      default:\n        break;\n    }\n  };\n\n  const getMenu = () => {\n    const login = {\n      key: 'login',\n      icon: (\n        <FontAwesomeIcon\n          icon={faSignIn}\n        />\n      ),\n      label: t('UserMenu.loginMenuTitle')\n    };\n\n    const username = {\n      key: 'username',\n      label: (\n        <div\n          className=\"user-name\"\n        >\n          <span>\n            {\n              user.providerDetails?.email\n            }\n          </span>\n        </div>\n      )\n    };\n\n    const divider = {\n      key: 'divider',\n      type: 'divider'\n    };\n\n    const settings = {\n      key: 'settings',\n      icon: (\n        <FontAwesomeIcon\n          icon={faUserCog}\n        />\n      ),\n      label: t('UserMenu.settingsMenuTitle')\n    };\n\n    const info = {\n      key: 'info',\n      icon: (\n        <FontAwesomeIcon\n          icon={faInfo}\n        />\n      ),\n      label: (\n        <ApplicationInfo\n          opener={\n            <span\n              className=\"info-opener\"\n            >\n              {t('UserMenu.infoMenuTitle')}\n            </span>\n          }\n        />\n      )\n    };\n\n    const logout = {\n      key: 'logout',\n      icon: (\n        <FontAwesomeIcon\n          icon={faSignOut}\n        />\n      ),\n      label: t('UserMenu.logoutMenuTitle')\n    };\n\n    const items: ItemType[] = _isEmpty(user) ?\n      [\n        login,\n        info\n      ] :\n      [\n        username,\n        divider,\n        settings,\n        info,\n        divider,\n        logout\n      ];\n\n    return (\n      <Menu\n        onClick={onMenuClick}\n        className=\"user-chip-menu\"\n        items={items}\n      />\n    );\n  };\n\n  return (\n    <UserChip\n      size={'small'}\n      imageSrc={getGravatarUrl({\n        email: user.providerDetails?.email || '',\n        size: 28\n      })}\n      userName={\n        <FontAwesomeIcon\n          icon={faAngleDown}\n        />\n      }\n      userMenu={getMenu()}\n    />\n  );\n};\n\nexport default UserMenu;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\n\nimport {\n  useAppSelector\n} from '../../hooks/useAppSelector';\n\nimport BasicNominatimSearch from '../BasicNominatimSearch';\nimport UserMenu from '../UserMenu';\n\nimport './index.less';\n\nexport interface HeaderProps extends React.ComponentProps<'div'> { };\n\nexport const Header: React.FC<HeaderProps> = ({\n  ...restProps\n}): JSX.Element => {\n  const title = useAppSelector((state) => state.title);\n  const logoPath = useAppSelector((state) => state.logoPath);\n\n  return (\n    <div\n      className=\"header\"\n      {...restProps}\n    >\n      <div\n        className=\"item-container left-items\"\n      >\n        <img\n          className=\"logo\"\n          src={logoPath}\n        />\n        <div\n          className=\"title\"\n        >\n          {title}\n        </div>\n      </div>\n      <div\n        className=\"item-container center-items\"\n      >\n        <BasicNominatimSearch />\n      </div>\n      <div\n        className=\"item-container right-items\"\n      >\n        <UserMenu />\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React, {\n  useEffect,\n  useState\n} from 'react';\n\nimport {\n  Input\n} from 'antd';\nimport {\n  InputProps\n} from 'antd/lib/input';\n\nimport {\n  MapFishPrintV3Manager\n} from '@terrestris/mapfish-print-manager';\n\ninterface CustomFieldInputProps extends InputProps {\n  printManager: MapFishPrintV3Manager;\n}\n\nexport const CustomFieldInput: React.FC<CustomFieldInputProps> = ({\n  printManager,\n  value,\n  id,\n  placeholder,\n  maxLength,\n  ...restProps\n}): JSX.Element => {\n\n  const [inputText, setInputText] = useState<any>(value);\n\n  useEffect(() => {\n    if (printManager && id) {\n      printManager.customParams[id] = inputText;\n    }\n  }, [printManager, inputText, id]);\n\n  useEffect(() => {\n    setInputText(value);\n  }, [value]);\n\n  return (\n    <Input\n      id={id}\n      value={inputText}\n      onChange={(event) => setInputText(event.target.value)}\n      placeholder={placeholder}\n      maxLength={maxLength}\n      showCount={!!(maxLength && maxLength > 1)}\n      {...restProps}\n    />\n  );\n};\n\nexport default CustomFieldInput;\n","import React, {\n  useEffect,\n  useState\n} from 'react';\n\nimport {\n  Select\n} from 'antd';\nimport {\n  SelectProps\n} from 'antd/lib/select';\n\nimport {\n  MapFishPrintV3Manager\n} from '@terrestris/mapfish-print-manager';\n\nimport {\n  Layout\n} from '../';\n\nexport interface LayoutSelectProps extends SelectProps<string> {\n  printManager: MapFishPrintV3Manager;\n}\n\nexport const LayoutSelect: React.FC<LayoutSelectProps> = ({\n  printManager,\n  placeholder = 'Bitte wählen Sie eine Vorlage aus',\n  value,\n  ...restProps\n}): JSX.Element => {\n\n  const [layout, setLayout] = useState<any>(value);\n\n  useEffect(() => {\n    if (printManager) {\n      printManager.setLayout(layout);\n    }\n  }, [printManager, layout]);\n\n  useEffect(() => {\n    setLayout(value);\n  }, [value]);\n\n  return (\n    <Select\n      placeholder={placeholder}\n      value={layout}\n      onChange={setLayout}\n      {...restProps}\n    >\n      {\n        printManager?.getLayouts().map((l: Layout) => (\n          <Select.Option\n            key={l.name}\n            value={l.name}\n          >\n            {l.name}\n          </Select.Option>\n        ))\n      }\n    </Select>\n  );\n};\n\nexport default LayoutSelect;\n","import React, {\n  useEffect,\n  useState\n} from 'react';\n\nimport {\n  Select\n} from 'antd';\nimport {\n  SelectProps\n} from 'antd/lib/select';\n\nimport {\n  MapFishPrintV3Manager\n} from '@terrestris/mapfish-print-manager';\n\nexport interface OutputFormatSelectProps extends SelectProps<string> {\n  printManager: MapFishPrintV3Manager;\n  outputFormats: string[];\n}\n\nexport const OutputFormatSelect: React.FC<OutputFormatSelectProps> = ({\n  printManager,\n  placeholder,\n  value,\n  outputFormats,\n  ...restProps\n}): JSX.Element => {\n\n  const [outputFormat, setOutputFormat] = useState<any>(value);\n\n  useEffect(() => {\n    if (printManager) {\n      printManager.setOutputFormat(outputFormat);\n    }\n  }, [printManager, outputFormat]);\n\n  useEffect(() => {\n    setOutputFormat(value);\n  }, [value]);\n\n  return (\n    <Select\n      placeholder={placeholder}\n      value={outputFormat}\n      onChange={setOutputFormat}\n      {...restProps}\n    >\n      {\n        outputFormats.map((f: string) => (\n          <Select.Option\n            key={f}\n            value={f}\n          >\n            {f.toLocaleUpperCase()}\n          </Select.Option>\n        ))\n      }\n    </Select>\n  );\n};\n\nexport default OutputFormatSelect;\n","import React, {\n  useEffect,\n  useState\n} from 'react';\n\nimport {\n  Select\n} from 'antd';\nimport {\n  SelectProps\n} from 'antd/lib/select';\n\nimport {\n  MapFishPrintV3Manager\n} from '@terrestris/mapfish-print-manager';\n\nexport interface ResolutionSelectProps extends SelectProps<number> {\n  printManager: MapFishPrintV3Manager;\n}\n\nexport const ResolutionSelect: React.FC<ResolutionSelectProps> = ({\n  printManager,\n  placeholder,\n  value,\n  ...restProps\n}): JSX.Element => {\n\n  const [resolution, setResolution] = useState<any>(value);\n\n  useEffect(() => {\n    if (printManager) {\n      printManager.setDpi(resolution);\n    }\n  }, [printManager, resolution]);\n\n  useEffect(() => {\n    setResolution(value);\n  }, [value]);\n\n  return (\n    <Select\n      placeholder={placeholder}\n      value={resolution}\n      onChange={setResolution}\n      {...restProps}\n    >\n      {\n        printManager?.getDpis().map((d: number) => (\n          <Select.Option\n            key={d}\n            value={d}\n          >\n            {`${d} DPI`}\n          </Select.Option>\n        ))\n      }\n    </Select>\n  );\n};\n\nexport default ResolutionSelect;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useState\n} from 'react';\n\nimport {\n  faDownload\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  Alert,\n  Button,\n  Form\n} from 'antd';\n\nimport {\n  FormProps\n} from 'antd/lib/form/Form';\n\nimport OlLayerGroup from 'ol/layer/Group';\nimport OlLayer from 'ol/layer/Layer';\nimport OlMap from 'ol/Map';\nimport OlSource from 'ol/source/Source';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport Logger from '@terrestris/base-util/dist/Logger';\n\nimport {\n  MapFishPrintV3Manager\n} from '@terrestris/mapfish-print-manager';\n\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\n\nimport CustomFieldInput from './CustomFieldInput';\nimport LayoutSelect from './LayoutSelect';\nimport OutputFormatSelect from './OutputFormatSelect';\nimport ResolutionSelect from './ResolutionSelect';\n\nimport './index.less';\n\nexport interface Layout {\n  name: string;\n  attributes: any[];\n}\n\nexport interface PrintFormProps extends Omit<FormProps, 'form'> {\n  map: OlMap;\n  layerBlackList?: string[];\n  outputFormats?: string[];\n  layouts?: Layout[];\n  printManager: MapFishPrintV3Manager;\n}\n\nexport const PrintForm: React.FC<PrintFormProps> = ({\n  layerBlackList = [],\n  map,\n  printManager,\n  ...restProps\n}): JSX.Element => {\n  const [form] = Form.useForm();\n  const {\n    t\n  } = useTranslation();\n\n  const [loading, setLoading] = useState<boolean>(false);\n  const [errorMsg, setErrorMsg] = useState<string | null>(null);\n\n  const legendFilter = (l: OlLayer<OlSource>) => {\n    const layerName = l.get('name');\n    const notBlacklisted = !layerBlackList.includes(layerName);\n    const notHidden = !l.get('hideLegendInPrint');\n    const visible = l.getVisible() && MapUtil.layerInResolutionRange(l, map);\n    const printableLayer = !(l instanceof OlLayerGroup);\n\n    if (notBlacklisted && notHidden && visible && printableLayer) {\n      const res = map.getView().getResolution();\n      if (res) {\n        l.set('customPrintLegendParams', {\n          'SCALE': MapUtil.getScaleForResolution(res, 'm')\n        });\n      }\n      return true;\n    }\n    return false;\n  };\n\n  const onDownloadClick = async () => {\n    try {\n      setErrorMsg(null);\n      setLoading(true);\n\n      await setCustomPrintParams();\n\n      const downloadUrl = await printManager.print(false);\n\n      if (!downloadUrl) {\n        throw new Error('No download URL available, the job has failed.');\n      }\n\n      window.open(downloadUrl);\n    } catch (error: any) {\n      setErrorMsg(t('PrintForm.printJobErrorMsg'));\n      Logger.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const setCustomPrintParams = async () => {\n    printManager.legendFilter = legendFilter;\n    printManager.customParams.printLegend = false;\n  };\n\n  const onAlertClose = () => {\n    setErrorMsg(null);\n  };\n\n  if (!printManager?.isInitiated()) {\n    return <></>;\n  }\n\n  const layout = {\n    labelCol: {\n      span: 8\n    },\n    wrapperCol: {\n      span: 16\n    }\n  };\n\n  return (\n    <div className=\"print\">\n      {\n        errorMsg &&\n        <Alert\n          className=\"print-alert\"\n          message={errorMsg}\n          type=\"error\"\n          closable\n          showIcon\n          onClose={onAlertClose}\n        />\n      }\n      <Form\n        form={form}\n        className=\"print-form\"\n        layout=\"horizontal\"\n        {...layout}\n        {...restProps}\n      >\n        <Form.Item\n          name=\"title\"\n          label={t('PrintForm.title')}\n          initialValue={t('PrintForm.initialTitle')}\n        >\n          <CustomFieldInput\n            maxLength={50}\n            printManager={printManager}\n            placeholder={t('PrintForm.titlePlaceholder')}\n          />\n        </Form.Item>\n        <Form.Item\n          name=\"comment\"\n          label={t('PrintForm.comment')}\n        >\n          <CustomFieldInput\n            maxLength={200}\n            printManager={printManager}\n            placeholder={t('PrintForm.commentPlaceholder')}\n          />\n        </Form.Item>\n        <Form.Item\n          name=\"layout\"\n          label={t('PrintForm.layout')}\n          initialValue={printManager?.getLayouts()[0]?.name}\n        >\n          <LayoutSelect\n            printManager={printManager}\n          />\n        </Form.Item>\n        <Form.Item\n          name=\"dpi\"\n          label={t('PrintForm.dpi')}\n          initialValue={72}\n        >\n          <ResolutionSelect\n            printManager={printManager}\n            placeholder={t('PrintForm.resolutionPlaceholder')}\n          />\n        </Form.Item>\n        <Form.Item\n          name=\"format\"\n          label={t('PrintForm.format')}\n          initialValue=\"pdf\"\n        >\n          <OutputFormatSelect\n            printManager={printManager}\n            outputFormats={['pdf', 'jpg', 'png']}\n            placeholder={t('PrintForm.outputFormatPlaceholder')}\n          />\n        </Form.Item>\n      </Form>\n      <Button\n        className='print-button tool-menu-button'\n        disabled={!printManager?.isInitiated()}\n        icon={<FontAwesomeIcon icon={faDownload} />}\n        loading={loading}\n        onClick={onDownloadClick}\n      >\n        {t('PrintForm.downloadBtnText')}\n      </Button>\n    </div>\n  );\n};\n\nexport default PrintForm;\n","import OlLayer from 'ol/layer/Layer';\nimport OlSourceImageWMS from 'ol/source/ImageWMS';\nimport OlSourceTileWMS from 'ol/source/TileWMS';\n\nimport MapFishPrintV3WMSSerializer from '@terrestris/mapfish-print-manager/dist/serializer/MapFishPrintV3WMSSerializer';\n\nexport class SHOGunMapFishPrintV3WMSSerializer extends MapFishPrintV3WMSSerializer {\n\n  static TYPE_WMS: string = 'wms';\n\n  static sourceCls: any[] = [\n    OlSourceImageWMS\n  ];\n\n  constructor() {\n    super();\n  }\n\n  serialize(layer: OlLayer<OlSourceImageWMS | OlSourceTileWMS>, opts: any = {}, resolution: number) {\n    const serialized: any = super.serialize(layer, opts, resolution);\n\n    if (serialized.baseURL.startsWith('/geoserver/ows')) {\n      serialized.baseURL = `http://shogun-geoserver:8080${serialized.baseURL}`;\n    }\n\n    return serialized;\n  }\n}\n\nexport default SHOGunMapFishPrintV3WMSSerializer;\n","import defaultsDeep from 'lodash/defaultsDeep';\n\nimport OlLayer from 'ol/layer/Layer';\nimport OlSourceTileWMS from 'ol/source/TileWMS';\n\nimport SHOGunMapFishPrintV3WMSSerializer from './SHOGunMapFishPrintV3WMSSerializer';\n\nexport class SHOGunMapFishPrintV3TiledWMSSerializer extends SHOGunMapFishPrintV3WMSSerializer {\n\n  static TYPE_WMS: string = 'tiledwms';\n\n  static sourceCls: any[] = [\n    OlSourceTileWMS\n  ];\n\n  constructor() {\n    super();\n  }\n\n  serialize(layer: OlLayer<OlSourceTileWMS>, opts: any = {}, resolution: number) {\n    defaultsDeep(opts, {\n      tileSize: [512, 512]\n    });\n\n    const source = layer.getSource();\n\n    if (!source || !this.validateSource(source)) {\n      return;\n    }\n\n    const serialized = {\n      ...super.serialize(layer, opts, resolution),\n      ...{\n        // @ts-ignore\n        type: this.constructor.TYPE_WMS\n      },\n      ...opts\n    };\n\n    return serialized;\n  }\n}\n\nexport default SHOGunMapFishPrintV3TiledWMSSerializer;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  ChangeEvent\n} from 'react';\n\nimport {\n  faDrawPolygon,\n  faGripLines,\n  faCircle,\n  faFont,\n  faSquare,\n  faPenToSquare,\n  faUpload,\n  faTrash\n} from '@fortawesome/free-solid-svg-icons';\n\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport GeoJSON from 'ol/format/GeoJSON';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport DeleteButton from '@terrestris/react-geo/dist/Button/DeleteButton/DeleteButton';\nimport DrawButton from '@terrestris/react-geo/dist/Button/DrawButton/DrawButton';\nimport ModifyButton from '@terrestris/react-geo/dist/Button/ModifyButton/ModifyButton';\nimport SimpleButton from '@terrestris/react-geo/dist/Button/SimpleButton/SimpleButton';\nimport ToggleGroup from '@terrestris/react-geo/dist/Button/ToggleGroup/ToggleGroup';\nimport UploadButton from '@terrestris/react-geo/dist/Button/UploadButton/UploadButton';\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\nimport {\n  DigitizeUtil\n} from '@terrestris/react-geo/dist/Util/DigitizeUtil';\n\nimport './index.less';\n\ninterface DefaultDrawProps { }\n\nexport interface DrawProps extends Partial<DefaultDrawProps> { }\n\nexport const Draw: React.FC<DrawProps> = (): JSX.Element => {\n  const {\n    t\n  } = useTranslation();\n\n  const map = useMap();\n\n  const onGeoJSONUpload = (geoJSONFile: File) => {\n    const fileReader = new FileReader();\n\n    fileReader.onload = () => {\n      const geoJSONFeatures = new GeoJSON().readFeatures(fileReader.result);\n\n      if (map) {\n        const mapProjection = map.getView().getProjection().getCode();\n        geoJSONFeatures.forEach(feat => {\n          feat.getGeometry()?.transform('EPSG:4326', mapProjection);\n        });\n        const digitizeLayer = DigitizeUtil.getDigitizeLayer(map);\n        const digitizeLayerSource = digitizeLayer.getSource();\n        digitizeLayerSource?.addFeatures(geoJSONFeatures);\n      }\n\n    };\n\n    fileReader.readAsText(geoJSONFile);\n  };\n\n  if (!map) {\n    return <></>;\n  }\n\n  return (\n    <ToggleGroup>\n      <DrawButton\n        name=\"drawPoint\"\n        drawType=\"Point\"\n      >\n        <FontAwesomeIcon icon={faCircle} />\n        <span className=\"draw-point\">{t('Draw.point')}</span>\n      </DrawButton>\n\n      <DrawButton\n        name=\"drawLine\"\n        drawType=\"LineString\"\n      >\n        <FontAwesomeIcon icon={faGripLines} />\n        <span className=\"draw-line\">{t('Draw.line')}</span>\n      </DrawButton>\n\n      <DrawButton\n        name=\"drawPolygon\"\n        drawType=\"Polygon\"\n      >\n        <FontAwesomeIcon icon={faDrawPolygon} />\n        <span className=\"draw-polygon\">{t('Draw.polygon')}</span>\n      </DrawButton>\n\n      <DrawButton\n        name=\"drawCircle\"\n        drawType=\"Circle\"\n      >\n        <FontAwesomeIcon icon={faCircle} />\n        <span className=\"draw-circle\">{t('Draw.circle')}</span>\n      </DrawButton>\n\n      <DrawButton\n        name=\"drawRectangle\"\n        drawType=\"Rectangle\"\n      >\n        <FontAwesomeIcon icon={faSquare} />\n        <span className=\"draw-rectangle\">{t('Draw.rectangle')}</span>\n      </DrawButton>\n\n      <DrawButton\n        name=\"drawText\"\n        drawType=\"Text\"\n      >\n        <FontAwesomeIcon icon={faFont} />\n        <span className=\"draw-text\">{t('Draw.text')}</span>\n      </DrawButton>\n\n      <ModifyButton name='draw-modify'>\n        <FontAwesomeIcon icon={faPenToSquare} />\n        <span className=\"draw-modify\">{t('Draw.modify')}</span>\n      </ModifyButton>\n\n      <UploadButton\n        name='draw-upload'\n        onChange={(e: ChangeEvent<HTMLInputElement>) => {\n          const uploadedFiles = e.target.files;\n          if (\n            (uploadedFiles && uploadedFiles.length === 1) &&\n            (\n              uploadedFiles[0].type === 'application/geo+json' ||\n              uploadedFiles[0].type === 'application/geojson'\n            )\n          ) {\n            onGeoJSONUpload(uploadedFiles[0]);\n          }\n        }}\n      >\n        <SimpleButton>\n          <FontAwesomeIcon icon={faUpload} />\n          <span className=\"draw-upload\">{t('Draw.upload')}</span>\n        </SimpleButton>\n      </UploadButton>\n\n      <DeleteButton name='draw-delete'>\n        <FontAwesomeIcon icon={faTrash} />\n        <span className=\"draw-delete\">{t('Draw.delete')}</span>\n      </DeleteButton>\n\n    </ToggleGroup>\n  );\n};\n\nexport default Draw;\n","\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useEffect,\n  useState\n} from 'react';\n\nimport {\n  faCopy\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\nimport {\n  Button,\n  Pagination,\n  TableProps,\n  Tooltip\n} from 'antd';\n\nimport copy from 'copy-to-clipboard';\n\nimport _isFinite from 'lodash/isFinite';\n\nimport OlFeature from 'ol/Feature';\nimport OlFormatGeoJSON from 'ol/format/GeoJSON';\nimport OlLayerVector from 'ol/layer/Vector';\nimport OlSourceVector from 'ol/source/Vector';\nimport OlStyleCircle from 'ol/style/Circle';\nimport OlStyleFill from 'ol/style/Fill';\nimport OlStyleStroke from 'ol/style/Stroke';\nimport OlStyle from 'ol/style/Style';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\n\nimport {\n  useMap\n} from '@terrestris/react-geo';\nimport PropertyGrid from '@terrestris/react-geo/dist/Grid/PropertyGrid/PropertyGrid';\n\nimport './index.less';\n\nexport type FeatureInfoPropertyGridProps = {\n  features: OlFeature[];\n  layerName?: string;\n} & TableProps<OlFeature>;\n\nexport const FeatureInfoPropertyGrid: React.FC<FeatureInfoPropertyGridProps> = ({\n  features,\n  layerName = 'Unknown layer',\n  ...restProps\n}): JSX.Element => {\n  const [currentPage, setCurrenPage] = useState<number>();\n  const [selectedFeature, setSelectedFeature] = useState<OlFeature>();\n\n  const map = useMap();\n\n  const {\n    t\n  } = useTranslation();\n\n  const vectorLayerName = `selection-layer-${layerName}`;\n\n  const onChange = (page: number) => {\n    setCurrenPage(page);\n    setSelectedFeature(features[page - 1]);\n  };\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    const initVectorLayer = () => {\n      if (MapUtil.getLayerByName(map, vectorLayerName)) {\n        return;\n      }\n\n      const source = new OlSourceVector({\n        features: features\n      });\n\n      const fill = new OlStyleFill({\n        color: 'rgba(255, 255, 255, 0.15)'\n      });\n      const stroke = new OlStyleStroke({\n        color: 'rgba(209, 70, 47, 1)',\n        width: 2\n      });\n      const featureStyle = new OlStyle({\n        fill,\n        stroke,\n        image: new OlStyleCircle({\n          radius: 5,\n          fill,\n          stroke\n        })\n      });\n\n      const layer = new OlLayerVector({\n        source: source,\n        style: featureStyle\n      });\n\n      layer.set('name', vectorLayerName);\n\n      map.addLayer(layer);\n    };\n\n    const deinitVectorLayer = () => {\n      const vectorLayer = MapUtil.getLayerByName(map, vectorLayerName) as OlLayerVector<OlSourceVector>;\n\n      if (!vectorLayer) {\n        return;\n      }\n\n      map.removeLayer(vectorLayer);\n    };\n\n    initVectorLayer();\n\n    return () => deinitVectorLayer();\n  }, [map]);\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    const vectorLayer = MapUtil.getLayerByName(map, vectorLayerName) as OlLayerVector<OlSourceVector>;\n\n    if (!vectorLayer) {\n      return;\n    }\n\n    vectorLayer.getSource()?.clear();\n    setCurrenPage(1);\n\n    if (features.length > 0) {\n      setSelectedFeature(features[0]);\n    }\n  }, [features, map]);\n\n  useEffect(() => {\n    if (!selectedFeature || !map) {\n      return;\n    }\n\n    const vectorLayer = MapUtil.getLayerByName(map, vectorLayerName) as OlLayerVector<OlSourceVector>;\n\n    if (!vectorLayer) {\n      return;\n    }\n\n    vectorLayer.getSource()?.clear();\n\n    vectorLayer.getSource()?.addFeature(selectedFeature);\n  }, [selectedFeature, map]);\n\n  if (!selectedFeature) {\n    return <></>;\n  }\n\n  return (\n    <>\n      <div\n        className='property-grid-header'\n      >\n        {\n          layerName && <span>{layerName}</span>\n        }\n        <div\n          className='right-elements'\n        >\n          <Pagination\n            simple\n            total={features.length}\n            size=\"small\"\n            pageSize={1}\n            current={currentPage}\n            onChange={onChange}\n          />\n          <Tooltip\n            title=\"Copy to clipboard\"\n          >\n            <Button\n              type=\"primary\"\n              onClick={() => {\n                copy(new OlFormatGeoJSON().writeFeature(selectedFeature));\n              }}\n              icon={<FontAwesomeIcon icon={faCopy} />}\n            />\n          </Tooltip>\n        </div>\n      </div>\n      <PropertyGrid\n        feature={selectedFeature}\n        size=\"small\"\n        sticky={true}\n        columns={[{\n          title: 'Key',\n          dataIndex: 'attributeName',\n          key: 'attributeName',\n          width: '50%',\n          ellipsis: true,\n          defaultSortOrder: 'ascend',\n          sorter: (a, b) => a.key.localeCompare(b.key)\n        }, {\n          title: 'Value',\n          dataIndex: 'attributeValue',\n          key: 'attributeValue',\n          width: '50%',\n          ellipsis: true\n        }]}\n        scroll={{\n          y: Object.keys(selectedFeature.getProperties()).length > 6 ?\n            250 :\n            undefined\n        }}\n        {...restProps}\n      />\n    </>\n  );\n};\n\nexport default FeatureInfoPropertyGrid;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\n\nimport OlLayerImage from 'ol/layer/Image';\nimport OlLayerTile from 'ol/layer/Tile';\nimport OlSourceImageWMS from 'ol/source/ImageWMS';\nimport OlSourceTileWMS from 'ol/source/TileWMS';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\n\nimport CoordinateInfo, {\n  CoordinateInfoState,\n  CoordinateInfoProps\n} from '@terrestris/react-geo/dist/CoordinateInfo/CoordinateInfo';\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\nimport {\n  WmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport FeatureInfoPropertyGrid from './FeaturePropertyGrid';\n\nimport './index.less';\n\nexport type FeatureInfoProps = {\n  enabled?: boolean;\n} & Partial<CoordinateInfoProps>;\n\nexport const FeatureInfo: React.FC<FeatureInfoProps> = ({\n  enabled,\n  ...restProps\n}): JSX.Element => {\n  const {\n    t\n  } = useTranslation();\n\n  const map = useMap();\n\n  if (!map) {\n    return <></>;\n  }\n\n  const getQueryLayers = MapUtil.getAllLayers(map)\n    .filter((layer) => {\n      if (!layer.get('hoverable')) {\n        return false;\n      }\n\n      if (layer instanceof OlLayerImage && layer.getSource() instanceof OlSourceImageWMS) {\n        return true;\n      }\n\n      if (layer instanceof OlLayerTile && layer.getSource() instanceof OlSourceTileWMS) {\n        return true;\n      }\n\n      return false;\n    }) as WmsLayer[];\n\n  const resultRenderer = (opts: CoordinateInfoState) => {\n    const features = opts.features;\n    const loading = opts.loading;\n\n    if (Object.keys(features).length === 0) {\n      return (\n        <span className='usage-hint'>\n          {t('FeatureInfo.usageHint')}\n        </span>\n      );\n    }\n\n    return Object.entries(features)\n      .map(([layerName, feats]) => {\n        return (\n          <div\n            key={layerName}\n          >\n            <FeatureInfoPropertyGrid\n              features={feats}\n              layerName={layerName}\n              loading={loading}\n            />\n          </div>\n        );\n      });\n  };\n\n  if (!enabled) {\n    return <></>;\n  }\n\n  return (\n    <div className='feature-info-panel'>\n      <CoordinateInfo\n        featureCount={10}\n        map={map}\n        queryLayers={getQueryLayers}\n        resultRenderer={resultRenderer}\n        {...restProps}\n      />\n    </div>\n  );\n};\n\nexport default FeatureInfo;\n","import React, {\n  useState\n} from 'react';\n\nimport {\n  faEllipsisV\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  Dropdown,\n  DropDownProps,\n  Menu,\n  notification,\n  Spin\n} from 'antd';\nimport {\n  ItemType\n} from 'antd/lib/menu/hooks/useItems';\n\nimport {\n  getUid\n} from 'ol';\nimport LayerGroup from 'ol/layer/Group';\nimport OlLayer from 'ol/layer/Layer';\nimport {\n  transformExtent\n} from 'ol/proj';\nimport OlImageWMS from 'ol/source/ImageWMS';\nimport OlTileWMS from 'ol/source/TileWMS';\n\nimport {\n  MenuInfo\n} from 'rc-menu/lib/interface';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport Logger from '@terrestris/base-util/dist/Logger';\n\nimport LayerUtil from '@terrestris/ol-util/dist/LayerUtil/LayerUtil';\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\n\nexport type LayerTreeContextMenuProps = {\n  layer: OlLayer<OlImageWMS | OlTileWMS>;\n  visibleLegendsIds: string[];\n  setVisibleLegendsIds: (ids: string[]) => void;\n} & Partial<DropDownProps>;\n\nexport const LayerTreeContextMenu: React.FC<LayerTreeContextMenuProps> = ({\n  layer,\n  visibleLegendsIds,\n  setVisibleLegendsIds,\n  ...restProps\n}): JSX.Element => {\n\n  const [settingsVisible, setSettingsVisible] = useState<boolean>(false);\n  const [extentLoading, setExtentLoading] = useState<boolean>(false);\n\n  const map = useMap();\n  const {\n    t\n  } = useTranslation();\n\n  const onContextMenuItemClick = (evt: MenuInfo): void => {\n    switch (evt?.key) {\n      case 'zoomToExtent':\n        zoomToLayerExtent();\n        break;\n      case 'removeExternal':\n        removeExternalLayer();\n        break;\n      case 'toggleLegend':\n        const legendId: string = getUid(layer);\n        const newLegendIds = [...visibleLegendsIds];\n        if (newLegendIds.includes(legendId)) {\n          newLegendIds.splice(newLegendIds.indexOf(legendId), 1);\n        } else {\n          newLegendIds.push(legendId);\n        }\n        setVisibleLegendsIds(newLegendIds);\n        break;\n      default:\n        break;\n    }\n    setSettingsVisible(false);\n  };\n\n  const zoomToLayerExtent = async (): Promise<void> => {\n\n    if (!map) {\n      return;\n    }\n\n    setExtentLoading(true);\n\n    try {\n      let extent = await LayerUtil.getExtentForLayer(layer);\n      extent = transformExtent(extent, 'EPSG:4326', map.getView().getProjection());\n      map.getView().fit(extent);\n    } catch (error) {\n      Logger.error(error);\n      notification.error({\n        message: t('LayerTreeContextMenu.extentError')\n      });\n    } finally {\n      setExtentLoading(false);\n    }\n  };\n\n  const removeExternalLayer = () => {\n    if (!map) {\n      return;\n    }\n\n    const targetFolderName = t('LayerTree.externalWmsFolder');\n    const targetGroup: LayerGroup = MapUtil.getLayerByName(map, targetFolderName) as LayerGroup;\n    if (targetGroup) {\n      const existingLayers = targetGroup.getLayers();\n      try {\n        if (existingLayers.getLength() === 1) {\n          targetGroup.set('hideInLayerTree', true);\n        }\n        existingLayers.remove(layer);\n      } catch (e) {\n        Logger.error('Could not remove external layer from map.');\n      }\n    }\n  };\n\n  let items: ItemType[] = [{\n    label: (\n      <Spin\n        spinning={extentLoading}\n      >\n        {t('LayerTreeContextMenu.layerZoomToExtent')}\n      </Spin>\n    ),\n    key: 'zoomToExtent'\n  }];\n\n  const legendVisible = visibleLegendsIds.includes(getUid(layer));\n  if (layer.getVisible()) {\n    items.push({\n      label: legendVisible ? t('LayerTreeContextMenu.hideLegend') : t('LayerTreeContextMenu.showLegend'),\n      key: 'toggleLegend'\n    });\n  }\n\n  if (layer.get('isExternalLayer')) {\n    items.push({\n      label: t('LayerTreeContextMenu.removeLayer'),\n      key: 'removeExternal'\n    });\n  }\n\n  const settingsMenu = (\n    <Menu\n      items={items}\n      selectable={false}\n      onClick={onContextMenuItemClick}\n    />\n  );\n\n  return (\n    <Dropdown\n      overlay={settingsMenu}\n      placement=\"bottomLeft\"\n      onVisibleChange={setSettingsVisible}\n      visible={settingsVisible}\n      trigger={['click']}\n      {...restProps}\n    >\n      <FontAwesomeIcon icon={faEllipsisV} />\n    </Dropdown>\n  );\n};\n\nexport default LayerTreeContextMenu;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useState\n} from 'react';\n\nimport {\n  getUid\n} from 'ol';\nimport OlBaseLayer from 'ol/layer/Base';\nimport OlLayerGroup from 'ol/layer/Group';\nimport OlLayer from 'ol/layer/Layer';\nimport OlSource from 'ol/source/Source';\nimport OlSourceVector from 'ol/source/Vector';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\nimport RgLayerTree, {\n  LayerTreeProps as RgLayerTreeProps\n} from '@terrestris/react-geo/dist/LayerTree/LayerTree';\nimport Legend from '@terrestris/react-geo/dist/Legend/Legend';\nimport LayerTransparencySlider from '@terrestris/react-geo/dist/Slider/LayerTransparencySlider/LayerTransparencySlider';\nimport {\n  WmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport LayerTreeContextMenu from './LayerTreeContextMenu';\n\nimport './index.less';\n\nexport type LayerTreeProps = {} & Partial<RgLayerTreeProps>;\n\nexport const LayerTree: React.FC<LayerTreeProps> = ({\n  ...restProps\n}): JSX.Element => {\n  const map = useMap();\n  const {\n    t\n  } = useTranslation();\n\n  const [visibleLegendsIds, setVisibleLegendsIds] = useState<string[]>([]);\n\n  const treeFilterFunction = (layer: OlLayer<OlSource> | OlLayerGroup) => {\n    if (layer instanceof OlLayerGroup) {\n      return !layer.get('hideInLayerTree');\n    } else {\n      return !layer.get('isBackgroundLayer') &&\n        !(layer.getSource && layer.getSource() instanceof OlSourceVector);\n    }\n  };\n\n  const treeNodeTitleRenderer = (layer: OlBaseLayer) => {\n    if (!map) {\n      return;\n    }\n\n    const mapView = map.getView();\n    const unit = mapView.getProjection().getUnits() || 'm';\n    const resolution = mapView.getResolution();\n    const scale = resolution ? MapUtil.getScaleForResolution(resolution, unit) : undefined;\n\n    if (layer instanceof OlLayerGroup) {\n      return (\n        <div>\n          {layer.get('name')}\n        </div>\n      );\n    } else {\n      return (\n        <>\n          <div className=\"tree-node-header\">\n            <span>{layer.get('name')}</span>\n            <LayerTreeContextMenu\n              layer={(layer as WmsLayer)}\n              visibleLegendsIds={visibleLegendsIds}\n              setVisibleLegendsIds={setVisibleLegendsIds}\n            />\n          </div>\n          {\n            layer.get('visible') &&\n              <>\n                <div className=\"layer-transparency\">\n                  <LayerTransparencySlider\n                    tipFormatter={val => `${t('LayerTree.transparency')}: ${val}%`}\n                    layer={layer}\n                  />\n                </div>\n              </>\n          }\n          {\n            layer.get('visible') && visibleLegendsIds.includes(getUid(layer)) &&\n              <Legend\n                layer={layer as WmsLayer}\n                errorMsg={t('LayerTree.noLegendAvailable')}\n                extraParams={{\n                  scale,\n                  LEGEND_OPTIONS: 'fontAntiAliasing:true;forceLabels:on',\n                  TRANSPARENT: true\n                }}\n              />\n          }\n        </>\n      );\n    }\n  };\n\n  if (!map) {\n    return <></>;\n  }\n\n  return (\n    <RgLayerTree\n      className=\"layertree\"\n      map={map}\n      nodeTitleRenderer={treeNodeTitleRenderer}\n      filterFunction={treeFilterFunction}\n      draggable={{\n        icon: false\n      }}\n      {...restProps}\n    />\n  );\n};\n\nexport default LayerTree;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\n\nimport {\n  faDrawPolygon,\n  faPenRuler\n} from '@fortawesome/free-solid-svg-icons';\n\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport MeasureButton from '@terrestris/react-geo/dist/Button/MeasureButton/MeasureButton';\nimport ToggleGroup from '@terrestris/react-geo/dist/Button/ToggleGroup/ToggleGroup';\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport './index.less';\n\ninterface DefaultMeasureProps { }\n\nexport interface MeasureProps extends Partial<DefaultMeasureProps> { }\n\nexport const Measure: React.FC<MeasureProps> = (): JSX.Element => {\n  const {\n    t\n  } = useTranslation();\n\n  const map = useMap();\n\n  if (!map) {\n    return <></>;\n  }\n\n  return (\n    <ToggleGroup>\n      <MeasureButton\n        geodesic\n        name=\"line\"\n        map={map}\n        measureType=\"line\"\n        type=\"link\"\n        continueLineMsg={t('Measure.clicktodrawline')}\n      >\n        <FontAwesomeIcon icon={faPenRuler} />\n        <span className=\"measure-text\">{t('Measure.line')}</span>\n      </MeasureButton>\n      <MeasureButton\n        geodesic\n        name=\"poly\"\n        map={map}\n        measureType=\"polygon\"\n        type=\"link\"\n        continuePolygonMsg={t('Measure.clicktodrawarea')}\n      >\n        <FontAwesomeIcon icon={faDrawPolygon} />\n        <span className=\"measure-text\">{t('Measure.area')}</span>\n      </MeasureButton>\n    </ToggleGroup>\n  );\n};\n\nexport default Measure;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import OlLayer from 'ol/layer/Layer';\nimport OlRendererLayer from 'ol/renderer/Layer';\nimport OlSourceImageWMS from 'ol/source/ImageWMS';\nimport OlSource from 'ol/source/Source';\nimport OlSourceTileWMS from 'ol/source/TileWMS';\n\nimport Shared from '@terrestris/mapfish-print-manager/dist/util/Shared';\n\nShared.getLegendGraphicUrl = (layer: OlLayer<OlSource, OlRendererLayer<any>>): string => {\n  if (layer.get('legendUrl')) {\n    return layer.get('legendUrl');\n  }\n\n  if (layer.getSource() instanceof OlSourceTileWMS ||\n    layer.getSource() instanceof OlSourceImageWMS) {\n\n    const customParams: any = layer.get('customPrintLegendParams');\n    const source: any = layer.getSource();\n\n    const {\n      LAYERS,\n      VERSION,\n      FORMAT\n    } = source.getParams();\n\n    let url: string = source instanceof OlSourceImageWMS ?\n      source.getUrl() :\n      source.getUrls()[0];\n\n    if (url.startsWith('/geoserver/ows')) {\n      url = `http://shogun-geoserver:8080${url}`;\n    }\n\n    const params: any = {\n      LAYER: LAYERS.split(',')[0],\n      VERSION: VERSION || '1.3.0',\n      SERVICE: 'WMS',\n      REQUEST: 'GetLegendGraphic',\n      FORMAT: FORMAT || 'image/png',\n      ...customParams\n    };\n\n    const queryParams = Object.keys(params).map(key => {\n      return `${encodeURIComponent(key)}=${encodeURIComponent(params[key])}`;\n    }).join('&');\n\n    if (url.endsWith('?')) {\n      return `${url}${queryParams}`;\n    } else {\n      return `${url}?${queryParams}`;\n    }\n  }\n\n  return '';\n};\n","import React, {\n  useCallback,\n  useEffect,\n  useState\n} from 'react';\n\nimport {\n  faRuler,\n  faFileDownload,\n  faStream,\n  faMousePointer,\n  faPlus,\n  faChevronRight,\n  faChevronLeft,\n  faDrawPolygon\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  Button,\n  Menu,\n  MenuProps\n} from 'antd';\n\nimport OlLayerGroup from 'ol/layer/Group';\nimport OlLayer from 'ol/layer/Layer';\nimport OlSource from 'ol/source/Source';\n\nimport {\n  SelectInfo\n} from 'rc-menu/lib/interface';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport Logger from '@terrestris/base-util/dist/Logger';\n\nimport {\n  MapFishPrintV3Manager\n} from '@terrestris/mapfish-print-manager';\nimport MapFishPrintV3GeoJsonSerializer from\n  '@terrestris/mapfish-print-manager/dist/serializer/MapFishPrintV3GeoJsonSerializer';\nimport MapFishPrintV3OSMSerializer from\n  '@terrestris/mapfish-print-manager/dist/serializer/MapFishPrintV3OSMSerializer';\nimport MapFishPrintV3WMTSSerializer from\n  '@terrestris/mapfish-print-manager/dist/serializer/MapFishPrintV3WMTSSerializer';\n\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport {\n  getBearerTokenHeader\n} from '@terrestris/shogun-util/dist/security/getBearerTokenHeader';\n\nimport useAppDispatch from '../../hooks/useAppDispatch';\nimport useAppSelector from '../../hooks/useAppSelector';\nimport useSHOGunAPIClient from '../../hooks/useSHOGunAPIClient';\n\nimport {\n  show\n} from '../../store/addLayerModal';\nimport {\n  unsetSelectedKey\n} from '../../store/toolMenu';\n\nimport PrintForm from '../PrintForm';\n\nimport SHOGunMapFishPrintV3TiledWMSSerializer from '../PrintForm/Serializer/SHOGunMapFishPrintV3TiledWMSSerializer';\nimport SHOGunMapFishPrintV3WMSSerializer from '../PrintForm/Serializer/SHOGunMapFishPrintV3WMSSerializer';\n\nimport Draw from './Draw';\nimport FeatureInfo from './FeatureInfo';\nimport LayerTree from './LayerTree';\nimport Measure from './Measure';\n\nimport './index.less';\n\nimport '../PrintForm/Shared/Shared';\n\nexport interface TitleEventEntity {\n  key: string;\n  domEvent: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>;\n}\n\nexport type ToolMenuProps = {} & Partial<MenuProps>;\n\nexport const ToolMenu: React.FC<ToolMenuProps> = ({\n  ...restProps\n}): JSX.Element => {\n  const {\n    t\n  } = useTranslation();\n  const map = useMap();\n\n  const client = useSHOGunAPIClient();\n\n  const dispatch = useAppDispatch();\n  const selectedKeys = useAppSelector(state => state.toolMenu.selectedKeys);\n\n  const [collapsed, setCollapsed] = useState<boolean>(false);\n  const [activeSubMenuKeys, setActiveSubmenuKeys] = useState<string[]>([]);\n  // It would be much more cleaner to manage state of initialized printManager\n  // inside of PrintForm component itself, but this is not possible due to the\n  // dubious antd menu implementaion: https://ant.design/components/menu/#FAQ\n  // According to this, all menu children will be rendered twice, what leads to\n  // dublicated instantiation of mapfish manager 🤦‍♂️\n  const [printManager, setPrintManager] = useState<MapFishPrintV3Manager | null>(null);\n\n  useEffect(() => {\n    if (activeSubMenuKeys.includes('print') && !printManager) {\n      initializeMapProvider();\n    }\n    return () => {\n      if (printManager && activeSubMenuKeys.includes('print')) {\n        printManager.shutdownManager();\n        setPrintManager(null);\n      }\n    };\n  }, [activeSubMenuKeys, printManager]);\n\n  const layerFilter = (l: OlLayer<OlSource>) => {\n    if (!map) {\n      return;\n    }\n\n    const layerName = l.get('name');\n    const layerBlackList = [\n      'react-geo_measure',\n      'hoverVectorLayer'\n    ];\n\n    return layerName && !layerBlackList.includes(layerName) &&\n      l.getVisible() && !(l instanceof OlLayerGroup) &&\n      MapUtil.layerInResolutionRange(l, map);\n  };\n\n  const initializeMapProvider = useCallback(async () => {\n    const pManager: MapFishPrintV3Manager = new MapFishPrintV3Manager({\n      url: '/print',\n      map,\n      timeout: 60000,\n      layerFilter,\n      headers: {\n        ...getBearerTokenHeader()\n      },\n      transformOpts: {\n        rotate: false\n      }\n    });\n\n    pManager.serializers = [\n      new MapFishPrintV3GeoJsonSerializer(),\n      new MapFishPrintV3OSMSerializer(),\n      new MapFishPrintV3WMTSSerializer(),\n      new SHOGunMapFishPrintV3WMSSerializer(),\n      new SHOGunMapFishPrintV3TiledWMSSerializer()\n    ];\n\n    await pManager.init()\n      .then(() => {\n        pManager.setOutputFormat(pManager.getOutputFormats()[0]);\n        pManager.setDpi(pManager.getDpis()[0]);\n        pManager.setLayout(pManager.getLayouts()[0]?.name);\n      })\n      .catch((error: any) => {\n        Logger.error(error);\n      });\n    setPrintManager(pManager);\n  }, [map, t]);\n\n  const onMenuSelect = (evt: SelectInfo) => {\n    switch (evt.key) {\n      case 'expand_collapse':\n        setCollapsed(!collapsed);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const onMenuDeselect = (evt: SelectInfo) => {\n    switch (evt.key) {\n      case 'expand_collapse':\n        setCollapsed(!collapsed);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const onOpenChange = (openKeys: string[]) => {\n    if (collapsed) {\n      openKeys = openKeys.filter(k => k === 'measure_tools' || k === 'expand_collapse');\n    }\n    setActiveSubmenuKeys(openKeys);\n  };\n\n  const onSubmenuTitleClick = (key: TitleEventEntity) => {\n    setCollapsed(false);\n    selectedKeys.forEach(selKey => dispatch(unsetSelectedKey(selKey)));\n    setActiveSubmenuKeys([key.key]);\n  };\n\n  const items = [\n    {\n      className: 'measure',\n      key: 'measure_tools',\n      icon: <FontAwesomeIcon icon={faRuler} />,\n      label: t('ToolMenu.measure'),\n      children: [\n        {\n          key: 'measure-panel',\n          label: <Measure />\n        }\n      ]\n    },\n    {\n      className: 'draw',\n      key: 'draw_tools',\n      icon: <FontAwesomeIcon icon={faDrawPolygon} />,\n      label: t('ToolMenu.draw'),\n      children: [\n        {\n          key: 'draw-panel',\n          label: <Draw />\n        }\n      ]\n    },\n    {\n      key: 'feature_info',\n      onTitleClick: onSubmenuTitleClick,\n      icon: <FontAwesomeIcon icon={faMousePointer} />,\n      label: t('ToolMenu.featureInfo'),\n      children: [\n        {\n          key: 'feature-info-panel',\n          label: (\n            <FeatureInfo\n              enabled={activeSubMenuKeys.includes('feature_info')}\n            />\n          )\n        }\n      ]\n    },\n    {\n      key: 'print',\n      onTitleClick: onSubmenuTitleClick,\n      icon: <FontAwesomeIcon icon={faFileDownload} />,\n      label: t('ToolMenu.print'),\n      children: [\n        {\n          key: 'print-panel',\n          label: (\n            <PrintForm\n              printManager={printManager!}\n              map={map!}\n            />\n          )\n        }\n      ]\n    },\n    {\n      className: 'tree',\n      key: 'tree',\n      onTitleClick: onSubmenuTitleClick,\n      icon: <FontAwesomeIcon icon={faStream} />,\n      label: t('ToolMenu.layertree'),\n      children: [\n        {\n          key: 'tree-panel',\n          label: (\n            <div className='tree-wrapper'>\n              <LayerTree />\n              <Button\n                className='add-wms-button tool-menu-button'\n                icon={<FontAwesomeIcon icon={faPlus} />}\n                onClick={() => dispatch(show())}\n              >\n                {t('ToolMenu.addWms')}\n              </Button>\n            </div>\n          )\n        }\n      ]\n    },\n    {\n      key: 'expand_collapse',\n      label:  collapsed ? t('ToolMenu.expand') : t('ToolMenu.collapse'),\n      icon: collapsed ?\n        <FontAwesomeIcon icon={faChevronRight} /> :\n        <FontAwesomeIcon icon={faChevronLeft} />\n    }\n  ];\n\n  return (\n    <div className=\"tool-menu\">\n      <Menu\n        mode=\"inline\"\n        inlineCollapsed={collapsed}\n        onSelect={onMenuSelect}\n        onDeselect={onMenuDeselect}\n        openKeys={activeSubMenuKeys}\n        onOpenChange={onOpenChange}\n        multiple={true}\n        selectedKeys={selectedKeys}\n        items={items}\n        {...restProps}\n      />\n    </div>\n  );\n};\n\nexport default ToolMenu;\n","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../node_modules/mini-css-extract-plugin/dist/loader.js!../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./App.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../node_modules/mini-css-extract-plugin/dist/loader.js!../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./App.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useEffect\n} from 'react';\n\nimport AddLayerModal from './components/AddLayerModal/AddLayerModal';\nimport BasicMapComponent from './components/BasicMapComponent';\nimport Footer from './components/Footer';\nimport Header from './components/Header';\nimport ToolMenu from './components/ToolMenu';\n\nimport './App.less';\n\nexport interface AppProps extends React.ComponentProps<'div'> { };\n\nexport const App: React.FC<AppProps> = ({\n  ...restProps\n}): JSX.Element => {\n\n  useEffect(() => {\n    const loadingMask = document.querySelectorAll('.loadmask')[0];\n\n    if (loadingMask) {\n      loadingMask.classList.add('loadmask-hidden');\n    }\n  }, []);\n\n  return (\n    <div\n      className=\"App\"\n      {...restProps}\n    >\n      <Header />\n      <BasicMapComponent />\n      <ToolMenu />\n      <Footer />\n      <AddLayerModal />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\n\nimport SHOGunAPIClient from '@terrestris/shogun-util/dist/service/SHOGunAPIClient';\n\nexport type SHOGunAPIClientProviderProps = {\n  client: SHOGunAPIClient;\n  children: JSX.Element;\n};\n\nexport const SHOGunAPIClientContext = React.createContext<(SHOGunAPIClient | null)>(null);\n\nexport const SHOGunAPIClientProvider: React.FC<SHOGunAPIClientProviderProps> = ({\n  client,\n  children\n}): JSX.Element => {\n  return (\n    <SHOGunAPIClientContext.Provider\n      value={client}\n    >\n      {children}\n    </SHOGunAPIClientContext.Provider>\n  );\n};\n\nexport default SHOGunAPIClientContext;\n","import i18n from 'i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport {\n  initReactI18next\n} from 'react-i18next';\n\nimport resources from './translations';\n\n// eslint-disable-next-line import/no-named-as-default-member\ni18n\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    resources,\n    fallbackLng: 'en',\n    debug: false,\n    interpolation: {\n      escapeValue: false\n    },\n    supportedLngs: ['de', 'en']\n  });\n\nexport default i18n;\n","export default {\n  de: {\n    translation: {\n      ApplicationInfo: {\n        title: 'Über',\n        clientVersionTitle: 'Client Version',\n        backendVersionTitle: 'Backend Version'\n      },\n      AddLayerModal: {\n        addSelectedLayers: 'Auswahl hinzufügen',\n        addAllLayers: 'Alle hinzufügen',\n        inputPlaceholder: 'WMS GetCapabilities URL angeben…',\n        externalWmsFolder: 'Externe Themen',\n        title: 'WMS hinzufügen',\n        columnTitle: 'Name',\n        errorMessage: 'Fehler',\n        errorDescription: 'Das Capabilities Dokument konnte nicht geladen werden, bitte prüfen Sie die URL'\n      },\n      Measure: {\n        title: 'Messen',\n        line: 'Entfernung',\n        area: 'Fläche',\n        clicktodrawline: 'Zum Zeichnen einer Linie klicken',\n        clicktodrawarea: 'Zum Zeichnen einer Fläche klicken'\n      },\n      Draw: {\n        point: 'Punkt',\n        line: 'Linie',\n        polygon: 'Polygon',\n        circle: 'Kreis',\n        rectangle: 'Rechteck',\n        text: 'Anmerkung',\n        modify: 'Bearbeitung',\n        upload: 'Hochladen',\n        delete: 'Löschen'\n      },\n      FeatureInfo: {\n        usageHint: 'Klicken Sie in die Karte, um Detailinformationen zu erhalten.'\n      },\n      LayerTree: {\n        transparency: 'Transparenz',\n        externalWmsFolder: 'Externe Dienste',\n        noLegendAvailable: 'Keine Legende verfügbar'\n      },\n      LayerTreeContextMenu: {\n        layerZoomToExtent: 'Auf Layerausdehnung zoomen',\n        extentError: 'Konnte nicht auf die Layerausdehnung zoomen',\n        removeLayer: 'Layer entfernen',\n        showLegend: 'Legende anzeigen',\n        hideLegend: 'Legende ausblenden'\n      },\n      ToolMenu: {\n        expand: 'Menu ausklappen',\n        collapse: 'Menu einklappen',\n        measure: 'Messen',\n        draw: 'Zeichnen',\n        featureInfo: 'Karteninhalte abfragen',\n        addWms: 'WMS hinzufügen',\n        print: 'Export',\n        layertree: 'Karten'\n      },\n      PrintForm: {\n        title: 'Kartentitel',\n        initialTitle: 'Druckausgabe',\n        titlePlaceholder: 'Bitte geben Sie einen Titel ein',\n        comment: 'Bemerkung',\n        commentPlaceholder: 'Bitte geben Sie einen Kommentar ein',\n        layout: 'Vorlage',\n        dpi: 'Auflösung',\n        format: 'Format',\n        downloadBtnText: 'Ausdruck erzeugen',\n        printJobErrorMsg: 'Der Kartenausdruck konnte nicht erzeugt werden',\n        initErrorMsg: 'Der Kartendruck Generator konnte nicht initialisiert werden.',\n        outputFormatPlaceholder: 'Bitte wählen Sie ein Ausgabeformat aus',\n        resolutionPlaceholder: 'Bitte wählen Sie eine Ausgabequalität aus'\n      },\n      Footer: {\n        refSystem: 'Bezugssystem',\n        scale: 'Maßstab',\n        mousePosition: 'Mausposition',\n        imprint: 'Impressum',\n        contact: 'Kontakt',\n        privacypolicy: 'Datenschutz'\n      },\n      Index: {\n        applicationLoadErrorMessage: 'Fehler beim Laden der Applikation',\n        applicationLoadErrorDescription: 'Die Applikation mit der ID {{applicationId}} konnte nicht geladen werden. ' +\n          'Die Standardkonfiguration wird stattdessen geladen.',\n        errorMessage: 'Fehler beim Laden der Applikation',\n        errorDescription: 'Aufgrund eines unerwarteten Fehlers konnte die Applikation nicht geladen werden. ' +\n          'Bitte laden Sie die Seite erneut.'\n      },\n      Nominatim: {\n        placeholder: 'Ortsname, Straßenname, Stadtteilname, POI usw.'\n      },\n      UserMenu: {\n        settingsMenuTitle: 'Profil bearbeiten',\n        infoMenuTitle: 'Über',\n        logoutMenuTitle: 'Ausloggen',\n        loginMenuTitle: 'Anmelden'\n      }\n    }\n  },\n  en: {\n    translation: {\n      ApplicationInfo: {\n        title: 'About',\n        clientVersionTitle: 'Client version',\n        backendVersionTitle: 'Backend version'\n      },\n      AddLayerModal: {\n        addSelectedLayers: 'Add selected',\n        addAllLayers: 'Add all',\n        inputPlaceholder: 'Enter a WMS GetCapabilities URL…',\n        externalWmsFolder: 'External layers',\n        title: 'Add WMS',\n        columnTitle: 'Name',\n        errorMessage: 'Error',\n        errorDescription: 'Could not load the provided Capabilities document, please check the validity of the URL'\n      },\n      Measure: {\n        title: 'Measure',\n        line: 'Distance',\n        area: 'Area',\n        clicktodrawline: 'Click to draw line',\n        clicktodrawarea: 'Click to draw area'\n      },\n      Draw: {\n        point: 'Point',\n        line: 'Line',\n        polygon: 'Polygon',\n        circle: 'Circle',\n        rectangle: 'Rectangle',\n        text: 'Annotation',\n        modify: 'Edit',\n        upload: 'Upload',\n        delete: 'Delete'\n      },\n      FeatureInfo: {\n        usageHint: 'Click on the map to get details about the clicked coordinate.'\n      },\n      LayerTree: {\n        transparency: 'Transparency',\n        externalWmsFolder: 'External services',\n        noLegendAvailable: 'No legend available'\n      },\n      LayerTreeContextMenu: {\n        layerZoomToExtent: 'Zoom to layer extent',\n        extentError: 'Could not zoom to layer extent',\n        removeLayer: 'Remove layer',\n        showLegend: 'Show legend',\n        hideLegend: 'Hide legend'\n      },\n      ToolMenu: {\n        expand: 'Expand',\n        collapse: 'Collapse',\n        measure: 'Measure',\n        draw: 'Draw',\n        featureInfo: 'Query map features',\n        addWms: 'Add WMS',\n        print: 'Export',\n        layertree: 'Maps'\n      },\n      PrintForm: {\n        title: 'Title',\n        initialTitle: 'Title',\n        titlePlaceholder: 'Please input a title…',\n        comment: 'Comment',\n        commentPlaceholder: 'Please enter a comment…',\n        layout: 'Layout',\n        dpi: 'Resolution',\n        format: 'Format',\n        downloadBtnText: 'Create print',\n        printJobErrorMsg: 'Could not generate PDF output',\n        initErrorMsg: 'PDF Generator could not be initialized',\n        outputFormatPlaceholder: 'Please select an output format',\n        resolutionPlaceholder: 'Please select an output quality'\n      },\n      Footer: {\n        refSystem: 'Reference system',\n        scale: 'Scale',\n        mousePosition: 'Mouse position',\n        imprint: 'Imprint',\n        contact: 'Contact',\n        privacypolicy: 'Privacy'\n      },\n      Index: {\n        applicationLoadErrorMessage: 'Error while loading the application',\n        applicationLoadErrorDescription: 'The application with ID {{applicationId}} could not be loaded correctly. ' +\n          'You\\'re seeing the default application configuration.',\n        errorMessage: 'Error while loading the application',\n        errorDescription: 'An unexpected error occured while loading the application. Please try to reload the page.'\n      },\n      Nominatim: {\n        placeholder: 'Place name, street name, district name, POI, etc.'\n      },\n      UserMenu: {\n        settingsMenuTitle: 'Edit profile',\n        infoMenuTitle: 'About',\n        logoutMenuTitle: 'Logout',\n        loginMenuTitle: 'Login'\n      }\n    }\n  }\n};\n","import {\n  createSlice,\n  PayloadAction\n} from '@reduxjs/toolkit';\n\nimport {\n  AppInfo\n} from '@terrestris/shogun-util/dist/model/AppInfo';\n\nconst initialState: AppInfo = {\n  authorities: [],\n  buildTime: '',\n  commitHash: '',\n  userId: -1,\n  version: ''\n};\n\nexport const slice = createSlice({\n  name: 'appInfo',\n  initialState,\n  reducers: {\n    setAppInfo(state, action: PayloadAction<AppInfo>) {\n      return action.payload;\n    }\n  }\n});\n\nexport const {\n  setAppInfo\n} = slice.actions;\n\nexport default slice.reducer;\n","import {\n  createSlice,\n  PayloadAction\n} from '@reduxjs/toolkit';\n\nconst initialState: string = './shogun_logo.png';\n\nexport const slice = createSlice({\n  name: 'logoPath',\n  initialState,\n  reducers: {\n    setLogoPath: (state, action: PayloadAction<string>) => {\n      return action.payload;\n    }\n  }\n});\n\nexport const {\n  setLogoPath\n} = slice.actions;\n\nexport default slice.reducer;\n","import {\n  createSlice,\n  PayloadAction\n} from '@reduxjs/toolkit';\n\nconst initialState: string = 'SHOGun Client';\n\nexport const slice = createSlice({\n  name: 'title',\n  initialState,\n  reducers: {\n    setTitle: (state, action: PayloadAction<string>) => {\n      return action.payload;\n    }\n  }\n});\n\nexport const {\n  setTitle\n} = slice.actions;\n\nexport default slice.reducer;\n","import {\n  createSlice,\n  PayloadAction\n} from '@reduxjs/toolkit';\n\nimport User from '@terrestris/shogun-util/dist/model/User';\n\nconst initialState: User = { };\n\nexport const slice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    setUser(state, action: PayloadAction<User>) {\n      return action.payload;\n    }\n  }\n});\n\nexport const {\n  setUser\n} = slice.actions;\n\nexport default slice.reducer;\n","import {\n  configureStore\n} from '@reduxjs/toolkit';\n\nimport addLayerModal from './addLayerModal';\nimport appInfo from './appInfo';\nimport logoPath from './logoPath';\nimport title from './title';\nimport toolMenu from './toolMenu';\nimport user from './user';\n\nexport const store = configureStore({\n  reducer: {\n    appInfo,\n    title,\n    logoPath,\n    toolMenu,\n    addLayerModal,\n    user\n  }\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../node_modules/mini-css-extract-plugin/dist/loader.js!../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../node_modules/mini-css-extract-plugin/dist/loader.js!../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\n\nimport {\n  Alert,\n  ConfigProvider,\n  notification\n} from 'antd';\n\nimport deDE from 'antd/lib/locale/de_DE';\nimport enGB from 'antd/lib/locale/en_GB';\n\nimport ClientConfiguration from 'clientConfig';\n\nimport Keycloak from 'keycloak-js';\n\nimport {\n  defaults as OlControlDefaults\n} from 'ol/control';\nimport OlLayerGroup from 'ol/layer/Group';\nimport OlLayerTile from 'ol/layer/Tile';\nimport OlMap from 'ol/Map';\nimport {\n  fromLonLat\n} from 'ol/proj';\nimport OlSourceOsm from 'ol/source/OSM';\nimport OlSourceTileWMS from 'ol/source/TileWMS';\nimport OlView from 'ol/View';\nimport {\n  render\n} from 'react-dom';\nimport {\n  Provider\n} from 'react-redux';\n\nimport Logger from '@terrestris/base-util/dist/Logger';\nimport UrlUtil from '@terrestris/base-util/dist/UrlUtil/UrlUtil';\n\nimport MapContext from '@terrestris/react-geo/dist/Context/MapContext/MapContext';\n\nimport {\n  AppInfo\n} from '@terrestris/shogun-util/dist/model/AppInfo';\nimport Application from '@terrestris/shogun-util/dist/model/Application';\nimport User from '@terrestris/shogun-util/dist/model/User';\nimport SHOGunApplicationUtil from '@terrestris/shogun-util/dist/parser/SHOGunApplicationUtil';\nimport SHOGunAPIClient from '@terrestris/shogun-util/dist/service/SHOGunAPIClient';\n\nconst App = React.lazy(() => import('./App'));\n\nimport {\n  SHOGunAPIClientProvider\n} from './context/SHOGunAPIClientContext';\nimport i18n from './i18n';\n\nimport {\n  setAppInfo\n} from './store/appInfo';\nimport {\n  setLogoPath\n} from './store/logoPath';\nimport {\n  store\n} from './store/store';\nimport {\n  setTitle\n} from './store/title';\nimport {\n  setUser\n} from './store/user';\n\nimport './index.less';\n\n// TODO: extend antd properties too\nexport interface ThemeProperties extends React.CSSProperties {\n  '--primaryColor'?: string;\n  '--secondaryColor'?: string;\n  '--complementaryColor'?: string;\n}\n\nconst client = new SHOGunAPIClient({\n  url: ClientConfiguration.shogunBase || '/'\n});\n\nconst parser = new SHOGunApplicationUtil({\n  client\n});\n\nconst getConfigLang = (lang: string) => {\n  switch (lang) {\n    case 'en':\n      return enGB;\n    case 'de':\n      return deDE;\n    default:\n      return enGB;\n  }\n};\n\nconst getApplicationConfiguration = async () => {\n  const applicationId = UrlUtil.getQueryParam(window.location.href, 'applicationId');\n\n  if (!applicationId) {\n    Logger.info('No application ID given, can\\'t load any configuration.');\n    return;\n  }\n\n  try {\n    Logger.info(`Loading application with ID ${applicationId}`);\n\n    const application = await client.application().findOne(applicationId);\n\n    Logger.info(`Successfully loaded application with ID ${applicationId}`);\n\n    return application;\n  } catch (error) {\n    Logger.error(`Error while loading application with ID ${applicationId}: ${error}`);\n\n    notification.error({\n      message: i18n.t('Index.applicationLoadErrorMessage'),\n      description: i18n.t('Index.applicationLoadErrorDescription', {\n        applicationId: applicationId\n      }),\n      duration: 0\n    });\n  }\n};\n\nconst getApplicationInfo = async () => {\n  try {\n    Logger.info('Loading application info');\n\n    const appInfo = await client.info().getAppInfo();\n\n    Logger.info('Successfully loaded application info');\n\n    return appInfo;\n  } catch (error) {\n    Logger.error('Error while loading application info: ', error);\n  }\n};\n\nconst getUser = async (userId?: number) => {\n  if (!userId) {\n    Logger.info('No user ID given, can\\'t load it\\'s details.');\n    return;\n  }\n\n  try {\n    Logger.info(`Loading user with ID ${userId}`);\n\n    const user = await client.user().findOne(userId);\n\n    Logger.info(`Successfully loaded user with ID ${userId}`);\n\n    return user;\n  } catch (error) {\n    Logger.error(`Error while loading user with ID ${userId}: `, error);\n  }\n};\n\nconst setApplicationToStore = async (application?: Application) => {\n  if (!application) {\n    Logger.info('No application configuration provided, the default store will be loaded');\n\n    return;\n  }\n\n  if (application.name) {\n    store.dispatch(setTitle(application.name));\n  }\n  // @ts-ignore\n  if (application?.clientConfig?.theme?.logoPath) {\n    // @ts-ignore\n    store.dispatch(setLogoPath(application.clientConfig.theme.logoPath));\n  }\n};\n\nconst setAppInfoToStore = async (appInfo?: AppInfo) => {\n  if (!appInfo) {\n    return;\n  }\n\n  store.dispatch(setAppInfo(appInfo));\n};\n\nconst setUserToStore = async (user?: User) => {\n  if (!user) {\n    return;\n  }\n\n  store.dispatch(setUser(user));\n};\n\nconst initKeycloak = async () => {\n  const keycloakEnabled = ClientConfiguration.keycloak?.enabled;\n  const keycloakOnLoad = ClientConfiguration.keycloak?.onLoadAction;\n  const keycloakHost = ClientConfiguration.keycloak?.host || KEYCLOAK_HOST;\n  const keycloakRealm = ClientConfiguration.keycloak?.realm || KEYCLOAK_REALM;\n  const keycloakClientId = ClientConfiguration.keycloak?.clientId || KEYCLOAK_CLIENT_ID;\n\n  if (!keycloakEnabled) {\n    return undefined;\n  }\n\n  if (!keycloakHost) {\n    throw new Error('Neither config key keycloak.host nor environment KEYCLOAK_HOST is set');\n  }\n\n  if (!keycloakRealm) {\n    throw new Error('Neither config key keycloak.realm nor environment KEYCLOAK_REALM is set');\n  }\n\n  if (!keycloakClientId) {\n    throw new Error('Neither config key keycloak.clientId nor environment KEYCLOAK_CLIENT_ID is set');\n  }\n\n  const keycloak = new Keycloak({\n    url: `${keycloakHost}`,\n    realm: keycloakRealm,\n    clientId: keycloakClientId\n  });\n\n  keycloak.onTokenExpired = async () => {\n    try {\n      await keycloak.updateToken(0);\n    } catch (error) {\n      Logger.error('Error while refreshing the access token: ', error);\n    }\n  };\n\n  await keycloak.init({\n    onLoad: keycloakOnLoad\n  });\n\n  return keycloak;\n};\n\nconst setApplicationTitle = () => {\n  store.subscribe(() => {\n    document.title = store.getState().title;\n  });\n};\n\nconst setupMap = async (application?: Application) => {\n  if (application) {\n    return await setupSHOGunMap(application);\n  }\n\n  Logger.info('No application configuration provided, the default map will be loaded');\n\n  return setupDefaultMap();\n};\n\nconst setupSHOGunMap = async (application: Application) => {\n  const view = await parser.parseMapView(application);\n  const layers = await parser.parseLayerTree(application);\n\n  return new OlMap({\n    view,\n    layers,\n    controls: OlControlDefaults({\n      zoom: false\n    })\n  });\n};\n\nconst setupDefaultMap = () => {\n  const osmLayer = new OlLayerTile({\n    source: new OlSourceOsm()\n  });\n  osmLayer.set('name', 'OpenStreetMap');\n\n  const temperatureLayer = new OlLayerTile({\n    opacity: 0.5,\n    visible: true,\n    source: new OlSourceTileWMS({\n      url: 'https://gibs.earthdata.nasa.gov/wms/epsg3857/best/wms.cgi',\n      projection: 'EPSG:3857',\n      params: {\n        LAYERS: 'MERRA2_2m_Air_Temperature_Assimilated_Monthly'\n      }\n    })\n  });\n  temperatureLayer.setProperties({\n    name: '2-meter Air Temperature, Assimilated (Monthly, MERRA2)',\n    hoverable: true\n  });\n\n  const eoLayerGroup = new OlLayerGroup({\n    layers: [temperatureLayer]\n  });\n  eoLayerGroup.set('name', 'NASA Earth Observations');\n\n  const backgroundLayerGroup = new OlLayerGroup({\n    layers: [osmLayer]\n  });\n  backgroundLayerGroup.set('name', 'Background');\n\n  const center = fromLonLat([0, 40], 'EPSG:3857');\n\n  return new OlMap({\n    view: new OlView({\n      center: center,\n      zoom: 0\n    }),\n    layers: [backgroundLayerGroup, eoLayerGroup],\n    controls: OlControlDefaults({\n      zoom: false\n    })\n  });\n};\n\nconst parseTheme = (theme?: any): ThemeProperties => {\n  const style: any = {\n    '--primaryColor': '#59666C',\n    '--secondaryColor': '#70B3BE',\n    '--complementaryColor': '#FFFFFF'\n  };\n  if (!theme) {\n    return style;\n  }\n  if (theme.primaryColor) {\n    style['--primaryColor'] = theme.primaryColor;\n  }\n  if (theme.secondaryColor) {\n    style['--secondaryColor'] = theme.secondaryColor;\n  }\n  if (theme.secondaryColor) {\n    style['--complementaryColor'] = theme.complementaryColor;\n  }\n  return style;\n};\n\nconst renderApp = async () => {\n  try {\n    const keycloak = await initKeycloak();\n\n    if (keycloak) {\n      client.setKeycloak(keycloak);\n    }\n\n    const appConfig = await getApplicationConfiguration();\n\n    // @ts-ignore\n    const style = parseTheme(appConfig?.clientConfig?.theme);\n\n    ConfigProvider.config({\n      theme: {\n        primaryColor: style['--primaryColor']\n      }\n    });\n\n    setApplicationTitle();\n\n    setApplicationToStore(appConfig);\n\n    const appInfo = await getApplicationInfo();\n\n    setAppInfoToStore(appInfo);\n\n    const user = await getUser(appInfo?.userId);\n\n    setUserToStore(user);\n\n    const map = await setupMap(appConfig);\n\n    render(\n      <React.StrictMode>\n        <React.Suspense fallback={<span></span>}>\n          <SHOGunAPIClientProvider client={client}>\n            <ConfigProvider locale={getConfigLang(i18n.language)}>\n              <Provider store={store}>\n                <MapContext.Provider value={map}>\n                  <App style={style}/>\n                </MapContext.Provider>\n              </Provider>\n            </ConfigProvider>\n          </SHOGunAPIClientProvider>\n        </React.Suspense>\n      </React.StrictMode>,\n      document.getElementById('app')\n    );\n  } catch (error) {\n    const loadingMask = document.querySelectorAll('.loadmask')[0];\n\n    if (loadingMask) {\n      loadingMask.classList.add('loadmask-hidden');\n    }\n\n    Logger.error(error);\n\n    render(\n      <React.StrictMode>\n        <Alert\n          className=\"error-boundary\"\n          message={i18n.t('Index.errorMessage')}\n          description={i18n.t('Index.errorDescription')}\n          type=\"error\"\n          showIcon\n        />\n      </React.StrictMode>,\n      document.getElementById('app')\n    );\n  }\n};\n\nrenderApp();\n","import {\n  createSlice\n} from '@reduxjs/toolkit';\n\ninterface AddLayerModalState {\n  visible: boolean;\n}\n\nconst initialState: AddLayerModalState = {\n  visible: false\n};\n\nconst addLayerModalSlice = createSlice({\n  name: 'addLayerModal',\n  initialState,\n  reducers: {\n    show(state) {\n      state.visible = true;\n    },\n    hide(state) {\n      state.visible = false;\n    },\n    toggle(state) {\n      state.visible = !state.visible;\n    }\n  }\n});\n\nexport const {\n  show,\n  hide,\n  toggle\n} = addLayerModalSlice.actions;\n\nexport default addLayerModalSlice.reducer;\n","import {\n  createSlice,\n  PayloadAction\n} from '@reduxjs/toolkit';\n\nexport interface ToolMenuState {\n  selectedKeys: string[];\n}\n\nconst initialState: ToolMenuState = {\n  selectedKeys: []\n};\n\nexport const slice = createSlice({\n  name: 'toolMenu',\n  initialState,\n  reducers: {\n    setSelectedKey(state, action: PayloadAction<string>) {\n      state.selectedKeys.push(action.payload);\n    },\n    unsetSelectedKey(state, action: PayloadAction<string>) {\n      state.selectedKeys = state.selectedKeys.filter((key) => key !== action.payload);\n    }\n  }\n});\n\nexport const {\n  setSelectedKey,\n  unsetSelectedKey\n} = slice.actions;\n\nexport default slice.reducer;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n"],"names":["useDispatch","useAppSelector","useSelector","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","restProps","loading","setLoading","useState","layers","setLayers","selectedRowKeys","setSelectedRowKeys","url","setUrl","isModalVisible","state","addLayerModal","visible","dispatch","useAppDispatch","map","useMap","t","useTranslation","closeModal","hide","unsetSelectedKey","addLayers","layersToAdd","targetFolderName","targetGroup","MapUtil","OlLayerGroup","set","existingGroups","getLayerGroup","getLayers","insertAt","getLength","forEach","layerToAdd","getArray","includes","push","className","title","onCancel","footer","key","disabled","length","onClick","filter","layer","getUid","placeholder","value","onChange","event","target","onSearch","async","capabilities","CapabilitiesUtil","capabilitiesUrl","externalLayers","error","notification","message","description","enterButton","columns","render","text","record","get","rowKey","rowSelection","pagination","dataSource","MapComponent","useEffect","getControls","find","control","OlControlScaleLine","addControl","OlControlMousePosition","coordinateFormat","createStringXY","projection","undefinedHTML","id","type","ScaleCombo","getView","getProjection","getCode","window","open","NominatimSearch","countryCodes","allowClear","nominatimBaseUrl","useContext","SHOGunAPIClientContext","getGravatarUrl","email","size","rating","defaultImage","force","lowerCaseEmail","toLowerCase","md5","opener","appInfo","logoPath","isVisible","setVisible","toggleVisibility","Opener","React","centered","onOk","src","packageInfoClient","version","buildTime","keycloak","useSHOGunAPIClient","getKeycloak","user","onMenuClick","evt","accountManagement","login","logout","UserChip","imageSrc","providerDetails","userName","FontAwesomeIcon","icon","faAngleDown","userMenu","faSignIn","label","username","divider","settings","faUserCog","info","faInfo","faSignOut","items","_isEmpty","getMenu","printManager","maxLength","inputText","setInputText","customParams","showCount","layout","setLayout","getLayouts","l","name","outputFormats","outputFormat","setOutputFormat","f","toLocaleUpperCase","resolution","setResolution","setDpi","getDpis","d","layerBlackList","form","Form","errorMsg","setErrorMsg","legendFilter","layerName","notBlacklisted","notHidden","getVisible","printableLayer","res","getResolution","setCustomPrintParams","printLegend","isInitiated","closable","showIcon","onClose","labelCol","span","wrapperCol","initialValue","faDownload","downloadUrl","print","Error","Logger","SHOGunMapFishPrintV3WMSSerializer","MapFishPrintV3WMSSerializer","OlSourceImageWMS","constructor","super","serialize","opts","serialized","baseURL","startsWith","SHOGunMapFishPrintV3TiledWMSSerializer","OlSourceTileWMS","defaultsDeep","tileSize","source","getSource","this","validateSource","TYPE_WMS","ToggleGroup","DrawButton","drawType","faCircle","faGripLines","faDrawPolygon","faSquare","faFont","ModifyButton","faPenToSquare","UploadButton","e","uploadedFiles","files","geoJSONFile","fileReader","FileReader","onload","geoJSONFeatures","GeoJSON","readFeatures","result","mapProjection","feat","getGeometry","transform","DigitizeUtil","addFeatures","readAsText","onGeoJSONUpload","SimpleButton","faUpload","DeleteButton","faTrash","features","currentPage","setCurrenPage","selectedFeature","setSelectedFeature","vectorLayerName","OlSourceVector","fill","OlStyleFill","color","stroke","OlStyleStroke","width","featureStyle","OlStyle","image","OlStyleCircle","radius","OlLayerVector","style","addLayer","initVectorLayer","vectorLayer","removeLayer","deinitVectorLayer","clear","addFeature","simple","total","pageSize","current","page","copy","OlFormatGeoJSON","writeFeature","faCopy","PropertyGrid","feature","sticky","dataIndex","ellipsis","defaultSortOrder","sorter","a","b","localeCompare","scroll","y","Object","keys","getProperties","undefined","enabled","getQueryLayers","OlLayerImage","OlLayerTile","CoordinateInfo","featureCount","queryLayers","resultRenderer","entries","feats","visibleLegendsIds","setVisibleLegendsIds","settingsVisible","setSettingsVisible","extentLoading","setExtentLoading","zoomToLayerExtent","extent","LayerUtil","transformExtent","fit","removeExternalLayer","existingLayers","remove","spinning","legendVisible","settingsMenu","selectable","legendId","newLegendIds","splice","indexOf","overlay","placement","onVisibleChange","trigger","faEllipsisV","nodeTitleRenderer","mapView","unit","getUnits","scale","LayerTransparencySlider","tipFormatter","val","Legend","extraParams","LEGEND_OPTIONS","TRANSPARENT","filterFunction","draggable","MeasureButton","geodesic","measureType","continueLineMsg","faPenRuler","continuePolygonMsg","Shared","LAYERS","VERSION","FORMAT","getParams","getUrl","getUrls","params","LAYER","split","SERVICE","REQUEST","queryParams","encodeURIComponent","join","endsWith","selectedKeys","toolMenu","collapsed","setCollapsed","activeSubMenuKeys","setActiveSubmenuKeys","setPrintManager","initializeMapProvider","shutdownManager","layerFilter","useCallback","pManager","MapFishPrintV3Manager","timeout","headers","getBearerTokenHeader","transformOpts","rotate","serializers","MapFishPrintV3GeoJsonSerializer","MapFishPrintV3OSMSerializer","MapFishPrintV3WMTSSerializer","init","then","getOutputFormats","catch","onSubmenuTitleClick","selKey","faRuler","children","onTitleClick","faMousePointer","faFileDownload","faStream","faPlus","show","faChevronRight","faChevronLeft","mode","inlineCollapsed","onSelect","onDeselect","openKeys","onOpenChange","k","multiple","App","loadingMask","document","querySelectorAll","classList","add","SHOGunAPIClientProvider","client","Provider","i18n","LanguageDetector","use","initReactI18next","resources","de","translation","ApplicationInfo","clientVersionTitle","backendVersionTitle","AddLayerModal","addSelectedLayers","addAllLayers","inputPlaceholder","externalWmsFolder","columnTitle","errorMessage","errorDescription","Measure","line","area","clicktodrawline","clicktodrawarea","Draw","point","polygon","circle","rectangle","modify","upload","delete","FeatureInfo","usageHint","LayerTree","transparency","noLegendAvailable","LayerTreeContextMenu","layerZoomToExtent","extentError","showLegend","hideLegend","ToolMenu","expand","collapse","measure","draw","featureInfo","addWms","layertree","PrintForm","initialTitle","titlePlaceholder","comment","commentPlaceholder","dpi","format","downloadBtnText","printJobErrorMsg","initErrorMsg","outputFormatPlaceholder","resolutionPlaceholder","Footer","refSystem","mousePosition","imprint","contact","privacypolicy","Index","applicationLoadErrorMessage","applicationLoadErrorDescription","Nominatim","UserMenu","settingsMenuTitle","infoMenuTitle","logoutMenuTitle","loginMenuTitle","en","fallbackLng","debug","interpolation","escapeValue","supportedLngs","slice","createSlice","initialState","authorities","commitHash","userId","reducers","setAppInfo","action","payload","actions","setLogoPath","setTitle","setUser","store","configureStore","reducer","SHOGunAPIClient","ClientConfiguration","parser","SHOGunApplicationUtil","getConfigLang","lang","enGB","deDE","setupSHOGunMap","view","parseMapView","application","parseLayerTree","OlMap","controls","OlControlDefaults","zoom","setupDefaultMap","osmLayer","OlSourceOsm","temperatureLayer","opacity","setProperties","hoverable","eoLayerGroup","backgroundLayerGroup","center","fromLonLat","OlView","keycloakEnabled","keycloakOnLoad","onLoadAction","keycloakHost","host","KEYCLOAK_HOST","keycloakRealm","realm","KEYCLOAK_REALM","keycloakClientId","clientId","KEYCLOAK_CLIENT_ID","Keycloak","onTokenExpired","updateToken","onLoad","initKeycloak","setKeycloak","appConfig","applicationId","UrlUtil","location","href","findOne","duration","getApplicationConfiguration","theme","primaryColor","secondaryColor","complementaryColor","parseTheme","clientConfig","ConfigProvider","subscribe","getState","setApplicationToStore","getAppInfo","getApplicationInfo","setAppInfoToStore","setUserToStore","getUser","setupMap","fallback","locale","language","MapContext","getElementById","renderApp","addLayerModalSlice","toggle","setSelectedKey","___CSS_LOADER_EXPORT___","module"],"sourceRoot":""}